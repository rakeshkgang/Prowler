# name: Prowler Scan

# on:
#   push:
#     branches:
#       - main

# jobs:
#   scan:
#     runs-on: ubuntu-latest
#     permissions: write-all

#     steps:
#       - name: Check out code
#         uses: actions/checkout@v4

#       - name: Configure AWS credentials with OIDC
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#           role-session-name: github-actions
#           aws-region: us-east-1 

#       - name: Installing Prowler Dependencies
#         run: |
#           sudo apt-get update
#           sudo apt install zip unzip python3-pip -y
#           sudo apt remove python3-urllib3 -y
#           sudo pip install --ignore-installed prowler matplotlib pandas numpy requests slack-sdk plotly
#           prowler --version
#           ulimit -n 4096


#       - name: Running Security Audit on AWS
#         env:
#           ACCOUNT_ID: ${{ secrets.TARGET_ACCOUNT_ID }}
#         run: |
#           for ACCOUNTID in $ACCOUNT_ID; do
#           {
#             echo $ACCOUNTID
#             prowler aws \
#               --role arn:aws:iam::$ACCOUNTID:role/ProwlerExecRole \
#               --output-directory /home/runner/work/prowler/prowler/output \
#               --output-modes html csv json-asff 
#           }
#           done
#           aws s3 cp /home/runner/work/prowler/prowler/output/ "s3://test-2025-924144197303/" --recursive

#       - name: List Prowler Output
#         run: ls -l /home/runner/work/prowler/prowler/output

#       - name: Upload Prowler Results to S3
#         run: |
#           aws s3 cp /home/runner/work/prowler/prowler/output/ s3://test-2025-924144197303/ --recursive

#       - name: Debugging Outputs
#         run: |
#           echo "Verifying S3 bucket contents:"
#           aws s3 ls s3://test-2025-924144197303/


name: Prowler AWS Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  prowler-scan:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Grant permission to use OIDC tokens

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        run: |
          aws --version

      - name: Assume Role with OIDC
        id: assume-role
        run: |
          ROLE_ARN="${{ secrets.AWS_ROLE_ARN }}"  # The ARN of the role to assume (use a secret for this)

          # Get the OIDC token that GitHub automatically creates
          ID_TOKEN="${{ steps.assume-role.outputs.id_token }}"  # GitHub's automatically generated token

          # Ensure the token is passed correctly to the AWS CLI command
          CREDS=$(aws sts assume-role-with-web-identity \
            --role-arn $ROLE_ARN \
            --role-session-name GitHubOIDCSession \
            --web-identity-token "$ID_TOKEN" \
            --duration-seconds 3600)

          # Export AWS credentials from the assumed role to environment variables
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r .Credentials.AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r .Credentials.SecretAccessKey)
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r .Credentials.SessionToken)

      - name: Run Prowler scan
        run: |
          # Ensure output directory exists
          mkdir -p output

          # Run your Prowler scan with the credentials from the previous step
          ./your-prowler-script.sh

      - name: Upload Prowler reports to S3
        run: |
          aws s3 cp output/ "s3://$S3_BUCKET/" --recursive
