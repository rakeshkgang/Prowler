PROVIDER;DESCRIPTION;ACCOUNTID;REGION;ASSESSMENTDATE;REQUIREMENTS_ID;REQUIREMENTS_DESCRIPTION;REQUIREMENTS_ATTRIBUTES_SECTION;REQUIREMENTS_ATTRIBUTES_PROFILE;REQUIREMENTS_ATTRIBUTES_ASSESSMENTSTATUS;REQUIREMENTS_ATTRIBUTES_DESCRIPTION;REQUIREMENTS_ATTRIBUTES_RATIONALESTATEMENT;REQUIREMENTS_ATTRIBUTES_IMPACTSTATEMENT;REQUIREMENTS_ATTRIBUTES_REMEDIATIONPROCEDURE;REQUIREMENTS_ATTRIBUTES_AUDITPROCEDURE;REQUIREMENTS_ATTRIBUTES_ADDITIONALINFORMATION;REQUIREMENTS_ATTRIBUTES_REFERENCES;STATUS;STATUSEXTENDED;RESOURCEID;RESOURCENAME;CHECKID;MUTED
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-2;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-3;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ca-central-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-central-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-north-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-2;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-3;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;sa-east-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-2;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-1;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-2;2025-01-28 16:41:07.168323;1.20;Ensure that IAM Access analyzer is enabled for all regions;1. Identity and Access Management;Level 1;Automated;Enable IAM Access analyzer for IAM policies about all resources in each region.  IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.;;**From Console:**  Perform the following to enable IAM Access analyzer for IAM policies:  1. Open the IAM console at `https://console.aws.amazon.com/iam/.` 2. Choose `Access analyzer`. 3. Choose `Create analyzer`. 4. On the `Create analyzer` page, confirm that the `Region` displayed is the Region where you want to enable Access Analyzer. 5. Enter a name for the analyzer. `Optional as it will generate a name for you automatically`. 6. Add any tags that you want to apply to the analyzer. `Optional`.  7. Choose `Create Analyzer`. 8. Repeat these step for each active region  **From Command Line:**  Run the following command: ``` aws accessanalyzer create-analyzer --analyzer-name <NAME> --type <ACCOUNT|ORGANIZATION> ``` Repeat this command above for each active region.  **Note:** The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.;**From Console:**  1. Open the IAM console at `https://console.aws.amazon.com/iam/` 2. Choose `Access analyzer` 3. Click 'Analyzers' 4. Ensure that at least one analyzer is present 5. Ensure that the `STATUS` is set to `Active` 6. Repeat these step for each active region  **From Command Line:**  1. Run the following command: ``` aws accessanalyzer list-analyzers | grep status ``` 2. Ensure that at least one Analyzer the `status` is set to `ACTIVE`  3. Repeat the steps above for each active region.  If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.;;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/get-analyzer.html:https://docs.aws.amazon.com/cli/latest/reference/accessanalyzer/create-analyzer.html;FAIL;IAM Access Analyzer in account 851725370590 is not enabled.;arn:aws:iam::851725370590:root;851725370590;accessanalyzer_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ap-northeast-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-2;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ap-northeast-2:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-3;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ap-northeast-3:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ap-south-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ap-southeast-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ap-southeast-2:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ca-central-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:ca-central-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-central-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:eu-central-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-north-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:eu-north-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:eu-west-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-2;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:eu-west-2:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-3;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:eu-west-3:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;sa-east-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:sa-east-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:us-east-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-2;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:us-east-2:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-1;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:us-west-1:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-2;2025-01-28 16:41:07.168323;3.1;Ensure CloudTrail is enabled in all regions;3. Logging;Level 1;Automated;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,   - ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected  - ensuring that a multi-regions trail exists will ensure that `Global Service Logging` is enabled for a trail by default to capture recording of events generated on  AWS global services  - for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account;S3 lifecycle features can be used to manage the accumulation and management of logs over time. See the following AWS resource for more information on these features:  1. https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html;Perform the following to enable global (Multi-region) CloudTrail logging:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on _Trails_ on the left navigation pane 3. Click `Get Started Now` , if presented  - Click `Add new trail`   - Enter a trail name in the `Trail name` box  - Set the `Apply trail to all regions` option to `Yes`   - Specify an S3 bucket name in the `S3 bucket` box  - Click `Create`  4. If 1 or more trails already exist, select the target trail to enable for global logging 5. Click the edit icon (pencil) next to `Apply trail to all regions` , Click `Yes` and Click `Save`. 6. Click the edit icon (pencil) next to `Management Events` click `All` for setting `Read/Write Events` and Click `Save`.  **From Command Line:** ``` aws cloudtrail create-trail --name <trail_name> --bucket-name <s3_bucket_for_cloudtrail> --is-multi-region-trail  aws cloudtrail update-trail --name <trail_name> --is-multi-region-trail ```  Note: Creating CloudTrail via CLI without providing any overriding options configures `Management Events` to set `All` type of `Read/Writes` by default.;Perform the following to determine if CloudTrail is enabled for all regions:  **From Console:**  1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail) 2. Click on `Trails` on the left navigation pane  - You will be presented with a list of trails across all regions 3. Ensure at least one Trail has `All` specified in the `Region` column 4. Click on a trail via the link in the _Name_ column 5. Ensure `Logging` is set to `ON`  6. Ensure `Apply trail to all regions` is set to `Yes` 7. In section `Management Events` ensure `Read/Write Events` set to `ALL`  **From Command Line:** ```  aws cloudtrail describe-trails ``` Ensure `IsMultiRegionTrail` is set to `true`  ``` aws cloudtrail get-trail-status --name <trailname shown in describe-trails> ``` Ensure `IsLogging` is set to `true` ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`;;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?icmpid=docs_cloudtrail_console#logging-management-events:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-services.html#cloud-trail-supported-services-data-events;FAIL;No CloudTrail trails enabled with logging were found.;arn:aws:cloudtrail:us-west-2:851725370590:trail;851725370590;cloudtrail_multi_region_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.11;Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL);4. Monitoring;Level 2;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. NACLs are used as a stateless packet filter to control ingress and egress traffic for subnets within a VPC. It is recommended that a metric filter and alarm be established for changes made to NACLs.;Monitoring changes to NACLs will help ensure that AWS resources and services are not unintentionally exposed.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for NACL changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<nacl_changes_metric>` --metric-transformations metricName= `<nacl_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<nacl_changes_alarm>` --metric-name `<nacl_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }"" ``` 4. Note the `<nacl_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<nacl_changes_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<nacl_changes_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_changes_to_network_acls_alarm_configured;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.12;Ensure a log metric filter and alarm exist for changes to network gateways;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. Network gateways are required to send/receive traffic to a destination outside of a VPC. It is recommended that a metric filter and alarm be established for changes to network gateways.;Monitoring changes to network gateways will help ensure that all ingress/egress traffic traverses the VPC border via a controlled path.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for network gateways changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<network_gw_changes_metric>` --metric-transformations metricName= `<network_gw_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<network_gw_changes_alarm>` --metric-name `<network_gw_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }"" ``` 4. Note the `<network_gw_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<network_gw_changes_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<network_gw_changes_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_changes_to_network_gateways_alarm_configured;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.13;Ensure route table changes are monitored;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. Routing tables are used to route network traffic between subnets and to network gateways. It is recommended that a metric filter and alarm be established for changes to route tables.;CloudWatch is an AWS native service that allows you to observe and monitor resources and applications. CloudTrail Logs can also be sent to an external Security informationand event management (SIEM) environment for monitoring and alerting.Monitoring changes to route tables will help ensure that all VPC traffic flows through anexpected path and prevent any accidental or intentional modifications that may lead touncontrolled network traffic. An alarm should be triggered every time an AWS API call isperformed to create, replace, delete, or disassociate a Route Table.;;If you are using CloudTrails and CloudWatch, perform the following to setup the metric filter, alarm, SNS topic, and subscription: 1. Create a metric filter based on filter pattern provided which checks for route table changes and the <cloudtrail_log_group_name> taken from audit step 1. aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> -- filter-name `<route_table_changes_metric>` --metric-transformations metricName= `<route_table_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }' Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together. 2. Create an SNS topic that the alarm will notify aws sns create-topic --name <sns_topic_name> Note: you can execute this command once and then re-use the same topic for all monitoring alarms. 3. Create an SNS subscription to the topic created in step 2 aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> - -notification-endpoint <sns_subscription_endpoints> Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms. 4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 aws cloudwatch put-metric-alarm --alarm-name `<route_table_changes_alarm>` --metric-name `<route_table_changes_metric>` --statistic Sum --period 300 - -threshold 1 --comparison-operator GreaterThanOrEqualToThreshold -- evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>;If you are using CloudTrails and CloudWatch , perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarmsconfigured:1. Identify the log group name configured for use with active multi-region CloudTrail:• List all CloudTrails: aws cloudtrail describe-trails• Identify Multi region Cloudtrails: Trails with 'IsMultiRegionTrail' set totrue• From value associated with CloudWatchLogsLogGroupArn note<cloudtrail_log_group_name>Example: for CloudWatchLogsLogGroupArn that looks likearn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*,<cloudtrail_log_group_name> would be NewGroup• Ensure Identified Multi region CloudTrail is activeaws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>ensure IsLogging is set to TRUE• Ensure identified Multi-region Cloudtrail captures all Management Eventsaws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents setto true and ReadWriteType set to All2. Get a list of all associated metric filters for this <cloudtrail_log_group_name>:aws logs describe-metric-filters --log-group-name'<cloudtrail_log_group_name>'3. Ensure the output from the above command contains the following:'filterPattern': '{($.eventSource = ec2.amazonaws.com) && ($.eventName =CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName =ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName= DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName =DisassociateRouteTable) }'4. Note the <route_table_changes_metric> value associated with thefilterPattern found in step 3.5. Get a list of CloudWatch alarms and filter on the <route_table_changes_metric>captured in step 4.aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`<route_table_changes_metric>`]'6. Note the AlarmActions value - this will provide the SNS topic ARN value.7. Ensure there is at least one active subscriber to the SNS topicaws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>at least one subscription should have 'SubscriptionArn' with valid aws ARN.Example of valid 'SubscriptionArn':'arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>';Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_changes_to_network_route_tables_alarm_configured;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.14;Ensure a log metric filter and alarm exist for VPC changes;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is possible to have more than 1 VPC within an account, in addition it is also possible to create a peer connection between 2 VPCs enabling network traffic to route between VPCs. It is recommended that a metric filter and alarm be established for changes made to VPCs.;Monitoring changes to VPC will help ensure VPC traffic flow is not getting impacted.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for VPC changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<vpc_changes_metric>` --metric-transformations metricName= `<vpc_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) || ($.eventName = ModifyVpcAttribute) || ($.eventName = AcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) || ($.eventName = DeleteVpcPeeringConnection) || ($.eventName = RejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) || ($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink) || ($.eventName = EnableVpcClassicLink) }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<vpc_changes_alarm>` --metric-name `<vpc_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`:  ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ```  3. Ensure the output from the above command contains the following:  ``` ""filterPattern"": ""{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) || ($.eventName = ModifyVpcAttribute) || ($.eventName = AcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) || ($.eventName = DeleteVpcPeeringConnection) || ($.eventName = RejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) || ($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink) || ($.eventName = EnableVpcClassicLink) }"" ```  4. Note the `<vpc_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<vpc_changes_metric>` captured in step 4.  ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<vpc_changes_metric>`]' ```  6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic  ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN.  ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_changes_to_vpcs_alarm_configured;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.9;Ensure a log metric filter and alarm exist for AWS Config configuration changes;4. Monitoring;Level 2;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for detecting changes to CloudTrail's configurations.;Monitoring changes to AWS Config configuration will help ensure sustained visibility of configuration items within the AWS account.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for AWS Configuration changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<aws_config_changes_metric>` --metric-transformations metricName= `<aws_config_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventSource = config.amazonaws.com) && (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.eventName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder)) }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<aws_config_changes_alarm>` --metric-name `<aws_config_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventSource = config.amazonaws.com) && (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.eventName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder)) }"" ``` 4. Note the `<aws_config_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<aws_config_changes_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<aws_config_changes_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_and_alarm_for_aws_config_configuration_changes_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.5;Ensure a log metric filter and alarm exist for CloudTrail configuration changes;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for detecting changes to CloudTrail's configurations.;Monitoring changes to CloudTrail's configuration will help ensure sustained visibility to activities performed in the AWS account.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for cloudtrail configuration changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<cloudtrail_cfg_changes_metric>` --metric-transformations metricName= `<cloudtrail_cfg_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<cloudtrail_cfg_changes_alarm>` --metric-name `<cloudtrail_cfg_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`:  ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ```  3. Ensure the output from the above command contains the following:  ``` ""filterPattern"": ""{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }"" ```  4. Note the `<cloudtrail_cfg_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<cloudtrail_cfg_changes_metric>` captured in step 4.  ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<cloudtrail_cfg_changes_metric>`]' ```  6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic  ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN.  ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_and_alarm_for_cloudtrail_configuration_changes_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.6;Ensure a log metric filter and alarm exist for AWS Management Console authentication failures;4. Monitoring;Level 2;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for failed console authentication attempts.;Monitoring failed console logins may decrease lead time to detect an attempt to brute force a credential, which may provide an indicator, such as source IP, that can be used in other event correlation.;;"Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for AWS management Console Login Failures and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<console_signin_failure_metric>` --metric-transformations metricName= `<console_signin_failure_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = ConsoleLogin) && ($.errorMessage = ""Failed authentication"") }' ``` **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ``` **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ``` **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<console_signin_failure_alarm>` --metric-name `<console_signin_failure_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```";"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventName = ConsoleLogin) && ($.errorMessage = ""Failed authentication"") }"" ```  4. Note the `<console_signin_failure_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<console_signin_failure_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<console_signin_failure_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_authentication_failures;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.15;Ensure a log metric filter and alarm exists for AWS Organizations changes;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for AWS Organizations changes made in the master AWS Account.;Monitoring AWS Organizations changes can help you prevent any unwanted, accidental or intentional modifications that may lead to unauthorized access or other security breaches. This monitoring technique helps you to ensure that any unexpected changes performed within your AWS Organizations can be investigated and any unwanted changes can be rolled back.;;"Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for AWS Organizations changes and the `<cloudtrail_log_group_name>` taken from audit step 1: ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<organizations_changes>` --metric-transformations metricName= `<organizations_changes>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventSource = organizations.amazonaws.com) && (($.eventName = ""AcceptHandshake"") || ($.eventName = ""AttachPolicy"") || ($.eventName = ""CreateAccount"") || ($.eventName = ""CreateOrganizationalUnit"") || ($.eventName = ""CreatePolicy"") || ($.eventName = ""DeclineHandshake"") || ($.eventName = ""DeleteOrganization"") || ($.eventName = ""DeleteOrganizationalUnit"") || ($.eventName = ""DeletePolicy"") || ($.eventName = ""DetachPolicy"") || ($.eventName = ""DisablePolicyType"") || ($.eventName = ""EnablePolicyType"") || ($.eventName = ""InviteAccountToOrganization"") || ($.eventName = ""LeaveOrganization"") || ($.eventName = ""MoveAccount"") || ($.eventName = ""RemoveAccountFromOrganization"") || ($.eventName = ""UpdatePolicy"") || ($.eventName = ""UpdateOrganizationalUnit"")) }' ``` **Note:** You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify: ``` aws sns create-topic --name <sns_topic_name> ``` **Note:** you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2: ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ``` **Note:** you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2: ``` aws cloudwatch put-metric-alarm --alarm-name `<organizations_changes>` --metric-name `<organizations_changes>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```";"1. Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured: - Identify the log group name configured for use with active multi-region CloudTrail: - List all CloudTrails:  ``` aws cloudtrail describe-trails ``` - Identify Multi region Cloudtrails, Trails with `""IsMultiRegionTrail""` set to true - From value associated with CloudWatchLogsLogGroupArn note <cloudtrail_log_group_name>  **Example:** for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*, <cloudtrail_log_group_name> would be NewGroup  - Ensure Identified Multi region CloudTrail is active: ``` aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail> ``` Ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events: ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ``` - Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to true and `ReadWriteType` set to `All`.  2. Get a list of all associated metric filters for this <cloudtrail_log_group_name>: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventSource = organizations.amazonaws.com) && (($.eventName = ""AcceptHandshake"") || ($.eventName = ""AttachPolicy"") || ($.eventName = ""CreateAccount"") || ($.eventName = ""CreateOrganizationalUnit"") || ($.eventName = ""CreatePolicy"") || ($.eventName = ""DeclineHandshake"") || ($.eventName = ""DeleteOrganization"") || ($.eventName = ""DeleteOrganizationalUnit"") || ($.eventName = ""DeletePolicy"") || ($.eventName = ""DetachPolicy"") || ($.eventName = ""DisablePolicyType"") || ($.eventName = ""EnablePolicyType"") || ($.eventName = ""InviteAccountToOrganization"") || ($.eventName = ""LeaveOrganization"") || ($.eventName = ""MoveAccount"") || ($.eventName = ""RemoveAccountFromOrganization"") || ($.eventName = ""UpdatePolicy"") || ($.eventName = ""UpdateOrganizationalUnit"")) }"" ``` 4. Note the `<organizations_changes>` value associated with the filterPattern found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<organizations_changes>` captured in step 4: ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<organizations_changes>`]' ``` 6. Note the AlarmActions value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic: ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. Example of valid ""SubscriptionArn"":  ``` ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_aws_organizations_changes;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.7;Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs;4. Monitoring;Level 2;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for customer created CMKs which have changed state to disabled or scheduled deletion.;Data encrypted with disabled or deleted keys will no longer be accessible.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for disabled or scheduled for deletion CMK's and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<disable_or_delete_cmk_changes_metric>` --metric-transformations metricName= `<disable_or_delete_cmk_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{($.eventSource = kms.amazonaws.com) && (($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion)) }' ``` **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ``` **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ``` **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<disable_or_delete_cmk_changes_alarm>` --metric-name `<disable_or_delete_cmk_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{($.eventSource = kms.amazonaws.com) && (($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion)) }"" ``` 4. Note the `<disable_or_delete_cmk_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<disable_or_delete_cmk_changes_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<disable_or_delete_cmk_changes_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_disable_or_scheduled_deletion_of_kms_cmk;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.8;Ensure a log metric filter and alarm exist for S3 bucket policy changes;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for changes to S3 bucket policies.;Monitoring changes to S3 bucket policies may reduce time to detect and correct permissive policies on sensitive S3 buckets.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for S3 bucket policy changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<s3_bucket_policy_changes_metric>` --metric-transformations metricName= `<s3_bucket_policy_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventSource = s3.amazonaws.com) && (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<s3_bucket_policy_changes_alarm>` --metric-name `<s3_bucket_policy_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventSource = s3.amazonaws.com) && (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }"" ``` 4. Note the `<s3_bucket_policy_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<s3_bucket_policy_changes_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<s3_bucket_policy_changes_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_for_s3_bucket_policy_changes;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.4;Ensure a log metric filter and alarm exist for IAM policy changes;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established changes made to Identity and Access Management (IAM) policies.;Monitoring changes to IAM policies will help ensure authentication and authorization controls remain intact.;;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for IAM policy changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name `<cloudtrail_log_group_name>` --filter-name `<iam_changes_metric>` --metric-transformations metricName= `<iam_changes_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<iam_changes_alarm>` --metric-name `<iam_changes_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```;"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails:  `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`:  ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ```  3. Ensure the output from the above command contains the following:  ``` ""filterPattern"": ""{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}"" ```  4. Note the `<iam_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<iam_changes_metric>` captured in step 4.  ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<iam_changes_metric>`]' ```  6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic  ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN.  ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_policy_changes;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.3;Ensure a log metric filter and alarm exist for usage of 'root' account;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for 'root' login attempts.;Monitoring for 'root' account logins will provide visibility into the use of a fully privileged account and an opportunity to reduce the use of it.;;"Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for 'Root' account usage and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name `<cloudtrail_log_group_name>` --filter-name `<root_usage_metric>` --metric-transformations metricName= `<root_usage_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ $.userIdentity.type = ""Root"" && $.userIdentity.invokedBy NOT EXISTS && $.eventType != ""AwsServiceEvent"" }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<root_usage_alarm>` --metric-name `<root_usage_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```";"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails:  `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`:  ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ```  3. Ensure the output from the above command contains the following:  ``` ""filterPattern"": ""{ $.userIdentity.type = ""Root"" && $.userIdentity.invokedBy NOT EXISTS && $.eventType != ""AwsServiceEvent"" }"" ```  4. Note the `<root_usage_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<root_usage_metric>` captured in step 4.  ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<root_usage_metric>`]' ```  6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic  ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN.  ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";**Configuring log metric filter and alarm on Multi-region (global) CloudTrail**  - ensures that activities from all regions (used as well as unused) are monitored  - ensures that activities on all supported global services are monitored  - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_root_usage;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.10;Ensure a log metric filter and alarm exist for security group changes;4. Monitoring;Level 2;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. Security Groups are a stateful packet filter that controls ingress and egress traffic within a VPC. It is recommended that a metric filter and alarm be established for detecting changes to Security Groups.;Monitoring changes to security group will help ensure that resources and services are not unintentionally exposed.;;"Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for security groups changes and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name ""<cloudtrail_log_group_name>"" --filter-name ""<security_group_changes_metric>"" --metric-transformations metricName= ""<security_group_changes_metric>"" ,metricNamespace=""CISBenchmark"",metricValue=1 --filter-pattern ""{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup) }"" ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name ""<sns_topic_name>"" ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn ""<sns_topic_arn>"" --protocol <protocol_for_sns> --notification-endpoint ""<sns_subscription_endpoints>"" ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name ""<security_group_changes_alarm>"" --metric-name ""<security_group_changes_metric>"" --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace ""CISBenchmark"" --alarm-actions ""<sns_topic_arn>"" ```";"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup) }"" ``` 4. Note the `<security_group_changes_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<security_group_changes_metric>` captured in step 4. ``` aws cloudwatch describe-alarms --query ""MetricAlarms[?MetricName== '<security_group_changes_metric>']"" ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_security_group_changes;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.2;Ensure a log metric filter and alarm exist for Management Console sign-in without MFA;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for console logins that are not protected by multi-factor authentication (MFA).;Monitoring for single-factor console logins will increase visibility into accounts that are not protected by MFA.;;"Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for AWS Management Console sign-in without MFA and the `<cloudtrail_log_group_name>` taken from audit step 1.  Use Command:   ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<no_mfa_console_signin_metric>` --metric-transformations metricName= `<no_mfa_console_signin_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = ""ConsoleLogin"") && ($.additionalEventData.MFAUsed != ""Yes"") }' ```  Or (To reduce false positives incase Single Sign-On (SSO) is used in organization):  ``` aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<no_mfa_console_signin_metric>` --metric-transformations metricName= `<no_mfa_console_signin_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = ""ConsoleLogin"") && ($.additionalEventData.MFAUsed != ""Yes"") && ($.userIdentity.type = ""IAMUser"") && ($.responseElements.ConsoleLogin = ""Success"") }' ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ```  **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name `<no_mfa_console_signin_alarm>` --metric-name `<no_mfa_console_signin_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn> ```";"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all `CloudTrails`:  ``` aws cloudtrail describe-trails ```  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`  Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`  - Ensure Identified Multi region `CloudTrail` is active  ``` aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail> ```  Ensure in the output that `IsLogging` is set to `TRUE`  - Ensure identified Multi-region 'Cloudtrail' captures all Management Events  ``` aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails> ```  Ensure in the output there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`: ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ``` 3. Ensure the output from the above command contains the following: ``` ""filterPattern"": ""{ ($.eventName = ""ConsoleLogin"") && ($.additionalEventData.MFAUsed != ""Yes"") }"" ```  Or (To reduce false positives incase Single Sign-On (SSO) is used in organization):  ``` ""filterPattern"": ""{ ($.eventName = ""ConsoleLogin"") && ($.additionalEventData.MFAUsed != ""Yes"") && ($.userIdentity.type = ""IAMUser"") && ($.responseElements.ConsoleLogin = ""Success"") }"" ```  4. Note the `<no_mfa_console_signin_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<no_mfa_console_signin_metric>` captured in step 4.  ``` aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<no_mfa_console_signin_metric>`]' ``` 6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN. ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";"Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored -Filter pattern set to `{ ($.eventName = ""ConsoleLogin"") && ($.additionalEventData.MFAUsed != ""Yes"") && ($.userIdentity.type = ""IAMUser"") && ($.responseElements.ConsoleLogin = ""Success""}` reduces false alarms raised when user logs in via SSO account.";https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/viewing_metrics_with_cloudwatch.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_sign_in_without_mfa;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.1;Ensure a log metric filter and alarm exist for unauthorized API calls;4. Monitoring;Level 1;Automated;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for unauthorized API calls.;Monitoring unauthorized API calls will help reveal application errors and may reduce time to detect malicious activity.;This alert may be triggered by normal read-only console activities that attempt to opportunistically gather optional information, but gracefully fail if they don't have permissions.  If an excessive number of alerts are being generated then an organization may wish to consider adding read access to the limited IAM user permissions simply to quiet the alerts.  In some cases doing this may allow the users to actually view some areas of the system - any additional access given should be reviewed for alignment with the original limited IAM user intent.;"Perform the following to setup the metric filter, alarm, SNS topic, and subscription:  1. Create a metric filter based on filter pattern provided which checks for unauthorized API calls and the `<cloudtrail_log_group_name>` taken from audit step 1. ``` aws logs put-metric-filter --log-group-name ""cloudtrail_log_group_name"" --filter-name ""<unauthorized_api_calls_metric>"" --metric-transformations metricName=unauthorized_api_calls_metric,metricNamespace=CISBenchmark,metricValue=1 --filter-pattern ""{ ($.errorCode = ""*UnauthorizedOperation"") || ($.errorCode = ""AccessDenied*"") || ($.sourceIPAddress!=""delivery.logs.amazonaws.com"") || ($.eventName!=""HeadBucket"") }"" ```  **Note**: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.  2. Create an SNS topic that the alarm will notify ``` aws sns create-topic --name <sns_topic_name> ``` **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms. **Note**: Capture the TopicArn displayed when creating the SNS Topic in Step 2.  3. Create an SNS subscription to the topic created in step 2 ``` aws sns subscribe --topic-arn <sns_topic_arn from step 2> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints> ```  **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.  4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2 ``` aws cloudwatch put-metric-alarm --alarm-name ""unauthorized_api_calls_alarm"" --metric-name ""unauthorized_api_calls_metric"" --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace ""CISBenchmark"" --alarm-actions <sns_topic_arn> ```";"Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:  1. Identify the log group name configured for use with active multi-region CloudTrail:  - List all CloudTrails: `aws cloudtrail describe-trails`  - Identify Multi region Cloudtrails: `Trails with ""IsMultiRegionTrail"" set to true`  - From value associated with ""Name"":` note `<cloudtrail__name>`  - From value associated with ""CloudWatchLogsLogGroupArn"" note <cloudtrail_log_group_name>  Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*, <cloudtrail_log_group_name> would be NewGroup  - Ensure Identified Multi region CloudTrail is active  `aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>`  ensure `IsLogging` is set to `TRUE`  - Ensure identified Multi-region Cloudtrail captures all Management Events  `aws cloudtrail get-event-selectors --trail-name <""Name"" as shown in describe-trails>`  Ensure there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`  2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>` that you captured in step 1:  ``` aws logs describe-metric-filters --log-group-name ""<cloudtrail_log_group_name>"" ```  3. Ensure the output from the above command contains the following:  ``` ""filterPattern"": ""{ ($.errorCode = *UnauthorizedOperation) || ($.errorCode = AccessDenied*) || ($.sourceIPAddress!=delivery.logs.amazonaws.com) || ($.eventName!=HeadBucket) }"", ```  4. Note the ""filterName"" `<unauthorized_api_calls_metric>` value associated with the `filterPattern` found in step 3.  5. Get a list of CloudWatch alarms and filter on the `<unauthorized_api_calls_metric>` captured in step 4.  ``` aws cloudwatch describe-alarms --query ""MetricAlarms[?MetricName == `unauthorized_api_calls_metric`]"" ```  6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.  7. Ensure there is at least one active subscriber to the SNS topic  ``` aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn>  ``` at least one subscription should have ""SubscriptionArn"" with valid aws ARN.  ``` Example of valid ""SubscriptionArn"": ""arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"" ```";Configuring log metric filter and alarm on Multi-region (global) CloudTrail - ensures that activities from all regions (used as well as unused) are monitored - ensures that activities on all supported global services are monitored - ensures that all management events across all regions are monitored;https://aws.amazon.com/sns/:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html:https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html:https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html;FAIL;No CloudWatch log groups found with metric filters or alarms associated.;arn:aws:logs:us-east-1:851725370590:log-group;851725370590;cloudwatch_log_metric_filter_unauthorized_api_calls;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ap-northeast-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-2;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ap-northeast-2:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-3;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ap-northeast-3:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ap-south-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ap-southeast-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ap-southeast-2:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ca-central-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:ca-central-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-central-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:eu-central-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-north-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:eu-north-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:eu-west-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-2;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:eu-west-2:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-3;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:eu-west-3:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;sa-east-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:sa-east-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:us-east-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-2;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:us-east-2:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-1;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:us-west-1:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-2;2025-01-28 16:41:07.168323;3.3;Ensure AWS Config is enabled in all regions;3. Logging;Level 2;Automated;AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.;The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.;It is recommended AWS Config be enabled in all regions.;To implement AWS Config configuration:  **From Console:**  1. Select the region you want to focus on in the top right of the console 2. Click `Services`  3. Click `Config`  4. Define which resources you want to record in the selected region 5. Choose to include global resources (IAM resources) 6. Specify an S3 bucket in the same account or in another managed AWS account 7. Create an SNS Topic from the same AWS account or another managed AWS account  **From Command Line:**  1. Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the [AWS Config Service prerequisites](http://docs.aws.amazon.com/config/latest/developerguide/gs-cli-prereq.html). 2. Run this command to set up the configuration recorder ``` aws configservice subscribe --s3-bucket my-config-bucket --sns-topic arn:aws:sns:us-east-1:012345678912:my-config-notice --iam-role arn:aws:iam::012345678912:role/myConfigRole ``` 3. Run this command to start the configuration recorder: ``` start-configuration-recorder --configuration-recorder-name <value> ```;"Process to evaluate AWS Config configuration per region  **From Console:**  1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/). 2. On the top right of the console select target Region. 3. If presented with Setup AWS Config - follow remediation procedure: 4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears. 5. Ensure 1 or both check-boxes under ""All Resources"" is checked.  - Include global resources related to IAM resources - which needs to be enabled in 1 region only 6. Ensure the correct S3 bucket has been defined. 7. Ensure the correct SNS topic has been defined. 8. Repeat steps 2 to 7 for each region.  **From Command Line:**  1. Run this command to show all AWS Config recorders and their properties: ``` aws configservice describe-configuration-recorders ``` 2. Evaluate the output to ensure that there's at least one recorder for which `recordingGroup` object includes `""allSupported"": true` AND `""includeGlobalResourceTypes"": true`  Note: There is one more parameter ""ResourceTypes"" in recordingGroup object. We don't need to check the same as whenever we set ""allSupported"": true, AWS enforces resource types to be empty (""ResourceTypes"":[])  Sample Output:  ``` {  ""ConfigurationRecorders"": [  {  ""recordingGroup"": {  ""allSupported"": true,  ""resourceTypes"": [],  ""includeGlobalResourceTypes"": true  },  ""roleARN"": ""arn:aws:iam::<AWS_Account_ID>:role/service-role/<config-role-name>"",  ""name"": ""default""  }  ] } ```  3. Run this command to show the status for all AWS Config recorders: ``` aws configservice describe-configuration-recorder-status ``` 4. In the output, find recorders with `name` key matching the recorders that met criteria in step 2. Ensure that at least one of them includes `""recording"": true` and `""lastStatus"": ""SUCCESS""`";;https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-configuration-recorder-status.html;FAIL;AWS Config recorder 851725370590 is disabled.;arn:aws:config:us-west-2:851725370590:recorder;851725370590;config_recorder_all_regions_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;2.2.1;Ensure EBS Volume Encryption is Enabled in all Regions;2.2. Elastic Compute Cloud (EC2);Level 1;Automated;Elastic Compute Cloud (EC2) supports encryption at rest when using the Elastic Block Store (EBS) service. While disabled by default, forcing encryption at EBS volume creation is supported.;Encrypting data at rest reduces the likelihood that it is unintentionally exposed and can nullify the impact of disclosure if the encryption remains unbroken.;Losing access or removing the KMS key in use by the EBS volumes will result in no longer being able to access the volumes.;"**From Console:**  1. Login to AWS Management Console and open the Amazon EC2 console using https://console.aws.amazon.com/ec2/  2. Under `Account attributes`, click `EBS encryption`. 3. Click `Manage`. 4. Click the `Enable` checkbox. 5. Click `Update EBS encryption` 6. Repeat for every region requiring the change.  **Note:** EBS volume encryption is configured per region.  **From Command Line:**  1. Run  ``` aws --region <region> ec2 enable-ebs-encryption-by-default ``` 2. Verify that `""EbsEncryptionByDefault"": true` is displayed. 3. Repeat every region requiring the change.  **Note:** EBS volume encryption is configured per region.";"**From Console:**  1. Login to AWS Management Console and open the Amazon EC2 console using https://console.aws.amazon.com/ec2/  2. Under `Account attributes`, click `EBS encryption`. 3. Verify `Always encrypt new EBS volumes` displays `Enabled`. 4. Review every region in-use.  **Note:** EBS volume encryption is configured per region.  **From Command Line:**  1. Run  ``` aws --region <region> ec2 get-ebs-encryption-by-default ``` 2. Verify that `""EbsEncryptionByDefault"": true` is displayed. 3. Review every region in-use.  **Note:** EBS volume encryption is configured per region.";Default EBS volume encryption only applies to newly created EBS volumes. Existing EBS volumes are **not** converted automatically.;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html:https://aws.amazon.com/blogs/aws/new-opt-in-to-default-encryption-for-new-ebs-volumes/;FAIL;EBS Snapshot vol-0e1b309f25d04ecb6 is unencrypted.;arn:aws:ec2:us-east-1:851725370590:volume/vol-0e1b309f25d04ecb6;vol-0e1b309f25d04ecb6;ec2_ebs_volume_encryption;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;2.2.1;Ensure EBS Volume Encryption is Enabled in all Regions;2.2. Elastic Compute Cloud (EC2);Level 1;Automated;Elastic Compute Cloud (EC2) supports encryption at rest when using the Elastic Block Store (EBS) service. While disabled by default, forcing encryption at EBS volume creation is supported.;Encrypting data at rest reduces the likelihood that it is unintentionally exposed and can nullify the impact of disclosure if the encryption remains unbroken.;Losing access or removing the KMS key in use by the EBS volumes will result in no longer being able to access the volumes.;"**From Console:**  1. Login to AWS Management Console and open the Amazon EC2 console using https://console.aws.amazon.com/ec2/  2. Under `Account attributes`, click `EBS encryption`. 3. Click `Manage`. 4. Click the `Enable` checkbox. 5. Click `Update EBS encryption` 6. Repeat for every region requiring the change.  **Note:** EBS volume encryption is configured per region.  **From Command Line:**  1. Run  ``` aws --region <region> ec2 enable-ebs-encryption-by-default ``` 2. Verify that `""EbsEncryptionByDefault"": true` is displayed. 3. Repeat every region requiring the change.  **Note:** EBS volume encryption is configured per region.";"**From Console:**  1. Login to AWS Management Console and open the Amazon EC2 console using https://console.aws.amazon.com/ec2/  2. Under `Account attributes`, click `EBS encryption`. 3. Verify `Always encrypt new EBS volumes` displays `Enabled`. 4. Review every region in-use.  **Note:** EBS volume encryption is configured per region.  **From Command Line:**  1. Run  ``` aws --region <region> ec2 get-ebs-encryption-by-default ``` 2. Verify that `""EbsEncryptionByDefault"": true` is displayed. 3. Review every region in-use.  **Note:** EBS volume encryption is configured per region.";Default EBS volume encryption only applies to newly created EBS volumes. Existing EBS volumes are **not** converted automatically.;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html:https://aws.amazon.com/blogs/aws/new-opt-in-to-default-encryption-for-new-ebs-volumes/;FAIL;EBS Snapshot vol-066e29015de45e875 is unencrypted.;arn:aws:ec2:us-east-1:851725370590:volume/vol-066e29015de45e875;vol-066e29015de45e875;ec2_ebs_volume_encryption;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.18;Ensure IAM instance roles are used for AWS resource access from instances;1. Identity and Access Management;Level 2;Manual;"AWS access from within AWS instances can be done by either encoding AWS keys into AWS API calls or by assigning the instance to a role which has an appropriate permissions policy for the required access. ""AWS Access"" means accessing the APIs of AWS in order to access AWS resources or manage AWS account resources.";AWS IAM roles reduce the risks associated with sharing and rotating credentials that can be used outside of AWS itself. If credentials are compromised, they can be used from outside of the AWS account they give access to. In contrast, in order to leverage role permissions an attacker would need to gain and maintain access to a specific instance to use the privileges associated with it.  Additionally, if credentials are encoded into compiled applications or other hard to change mechanisms, then they are even more unlikely to be properly rotated due to service disruption risks. As time goes on, credentials that cannot be rotated are more likely to be known by an increasing number of individuals who no longer work for the organization owning the credentials.;;IAM roles can only be associated at the launch of an instance. To remediate an instance to add it to a role you must create a new instance.  If the instance has no external dependencies on its current private ip or public addresses are elastic IPs:  1. In AWS IAM create a new role. Assign a permissions policy if needed permissions are already known. 2. In the AWS console launch a new instance with identical settings to the existing instance, and ensure that the newly created role is selected. 3. Shutdown both the existing instance and the new instance. 4. Detach disks from both instances. 5. Attach the existing instance disks to the new instance. 6. Boot the new instance and you should have the same machine, but with the associated role.  **Note:** if your environment has dependencies on a dynamically assigned PRIVATE IP address you can create an AMI from the existing instance, destroy the old one and then when launching from the AMI, manually assign the previous private IP address.  **Note: **if your environment has dependencies on a dynamically assigned PUBLIC IP address there is not a way ensure the address is retained and assign an instance role. Dependencies on dynamically assigned public IP addresses are a bad practice and, if possible, you may wish to rebuild the instance with a new elastic IP address and make the investment to remediate affected systems while assigning the system to a role.;"Where an instance is associated with a Role:  For instances that are known to perform AWS actions, ensure that they belong to an instance role that has the necessary permissions:  1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings) 2. Open the EC2 Dashboard and choose ""Instances"" 3. Click the EC2 instance that performs AWS actions, in the lower pane details find ""IAM Role"" 4. If the Role is blank, the instance is not assigned to one. 5. If the Role is filled in, it does not mean the instance might not \*also\* have credentials encoded on it for some activities.  Where an Instance Contains Embedded Credentials:  - On the instance that is known to perform AWS actions, audit all scripts and environment variables to ensure that none of them contain AWS credentials.  Where an Instance Application Contains Embedded Credentials:  - Applications that run on an instance may also have credentials embedded. This is a bad practice, but even worse if the source code is stored in a public code repository such as github. When an application contains credentials can be determined by eliminating all other sources of credentials and if the application can still access AWS resources - it likely contains embedded credentials. Another method is to examine all source code and configuration files of the application.";;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html:https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html;FAIL;EC2 Instance i-05c87d8f8af115968 not associated with an Instance Profile Role.;arn:aws:ec2:us-east-1:851725370590:instance/i-05c87d8f8af115968;i-05c87d8f8af115968;ec2_instance_profile_attached;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.18;Ensure IAM instance roles are used for AWS resource access from instances;1. Identity and Access Management;Level 2;Manual;"AWS access from within AWS instances can be done by either encoding AWS keys into AWS API calls or by assigning the instance to a role which has an appropriate permissions policy for the required access. ""AWS Access"" means accessing the APIs of AWS in order to access AWS resources or manage AWS account resources.";AWS IAM roles reduce the risks associated with sharing and rotating credentials that can be used outside of AWS itself. If credentials are compromised, they can be used from outside of the AWS account they give access to. In contrast, in order to leverage role permissions an attacker would need to gain and maintain access to a specific instance to use the privileges associated with it.  Additionally, if credentials are encoded into compiled applications or other hard to change mechanisms, then they are even more unlikely to be properly rotated due to service disruption risks. As time goes on, credentials that cannot be rotated are more likely to be known by an increasing number of individuals who no longer work for the organization owning the credentials.;;IAM roles can only be associated at the launch of an instance. To remediate an instance to add it to a role you must create a new instance.  If the instance has no external dependencies on its current private ip or public addresses are elastic IPs:  1. In AWS IAM create a new role. Assign a permissions policy if needed permissions are already known. 2. In the AWS console launch a new instance with identical settings to the existing instance, and ensure that the newly created role is selected. 3. Shutdown both the existing instance and the new instance. 4. Detach disks from both instances. 5. Attach the existing instance disks to the new instance. 6. Boot the new instance and you should have the same machine, but with the associated role.  **Note:** if your environment has dependencies on a dynamically assigned PRIVATE IP address you can create an AMI from the existing instance, destroy the old one and then when launching from the AMI, manually assign the previous private IP address.  **Note: **if your environment has dependencies on a dynamically assigned PUBLIC IP address there is not a way ensure the address is retained and assign an instance role. Dependencies on dynamically assigned public IP addresses are a bad practice and, if possible, you may wish to rebuild the instance with a new elastic IP address and make the investment to remediate affected systems while assigning the system to a role.;"Where an instance is associated with a Role:  For instances that are known to perform AWS actions, ensure that they belong to an instance role that has the necessary permissions:  1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings) 2. Open the EC2 Dashboard and choose ""Instances"" 3. Click the EC2 instance that performs AWS actions, in the lower pane details find ""IAM Role"" 4. If the Role is blank, the instance is not assigned to one. 5. If the Role is filled in, it does not mean the instance might not \*also\* have credentials encoded on it for some activities.  Where an Instance Contains Embedded Credentials:  - On the instance that is known to perform AWS actions, audit all scripts and environment variables to ensure that none of them contain AWS credentials.  Where an Instance Application Contains Embedded Credentials:  - Applications that run on an instance may also have credentials embedded. This is a bad practice, but even worse if the source code is stored in a public code repository such as github. When an application contains credentials can be determined by eliminating all other sources of credentials and if the application can still access AWS resources - it likely contains embedded credentials. Another method is to examine all source code and configuration files of the application.";;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html:https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html;FAIL;EC2 Instance i-04137562ee75d404e not associated with an Instance Profile Role.;arn:aws:ec2:us-east-1:851725370590:instance/i-04137562ee75d404e;i-04137562ee75d404e;ec2_instance_profile_attached;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-0b7b58b9a821f7467 has every port open to the Internet.;arn:aws:ec2:ap-south-1:851725370590:network-acl/acl-0b7b58b9a821f7467;acl-0b7b58b9a821f7467;ec2_networkacl_allow_ingress_any_port;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-0170d63dc22c5910b has every port open to the Internet.;arn:aws:ec2:ap-southeast-2:851725370590:network-acl/acl-0170d63dc22c5910b;acl-0170d63dc22c5910b;ec2_networkacl_allow_ingress_any_port;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-075e7a76ead295a38 has every port open to the Internet.;arn:aws:ec2:us-east-1:851725370590:network-acl/acl-075e7a76ead295a38;acl-075e7a76ead295a38;ec2_networkacl_allow_ingress_any_port;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-0b7b58b9a821f7467 has SSH port 22 open to the Internet.;arn:aws:ec2:ap-south-1:851725370590:network-acl/acl-0b7b58b9a821f7467;acl-0b7b58b9a821f7467;ec2_networkacl_allow_ingress_tcp_port_22;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-0170d63dc22c5910b has SSH port 22 open to the Internet.;arn:aws:ec2:ap-southeast-2:851725370590:network-acl/acl-0170d63dc22c5910b;acl-0170d63dc22c5910b;ec2_networkacl_allow_ingress_tcp_port_22;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-075e7a76ead295a38 has SSH port 22 open to the Internet.;arn:aws:ec2:us-east-1:851725370590:network-acl/acl-075e7a76ead295a38;acl-075e7a76ead295a38;ec2_networkacl_allow_ingress_tcp_port_22;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-0b7b58b9a821f7467 has Microsoft RDP port 3389 open to the Internet.;arn:aws:ec2:ap-south-1:851725370590:network-acl/acl-0b7b58b9a821f7467;acl-0b7b58b9a821f7467;ec2_networkacl_allow_ingress_tcp_port_3389;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-0170d63dc22c5910b has Microsoft RDP port 3389 open to the Internet.;arn:aws:ec2:ap-southeast-2:851725370590:network-acl/acl-0170d63dc22c5910b;acl-0170d63dc22c5910b;ec2_networkacl_allow_ingress_tcp_port_3389;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.1;Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;;**From Console:**  Perform the following: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL to remediate, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Click `Edit inbound rules`  - Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule  - Click `Save`;**From Console:**  Perform the following to determine if the account is configured as prescribed: 1. Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home 2. In the left pane, click `Network ACLs` 3. For each network ACL, perform the following:  - Select the network ACL  - Click the `Inbound Rules` tab  - Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0` and shows `ALLOW`  **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports;;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html:https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Security.html#VPC_Security_Comparison;FAIL;Network ACL acl-075e7a76ead295a38 has Microsoft RDP port 3389 open to the Internet.;arn:aws:ec2:us-east-1:851725370590:network-acl/acl-075e7a76ead295a38;acl-075e7a76ead295a38;ec2_networkacl_allow_ingress_tcp_port_3389;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.2;Ensure no security groups allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;When updating an existing environment, ensure that administrators have access to remote server administration ports through another mechanism before removing access by deleting the 0.0.0.0/0 inbound rule.;Perform the following to implement the prescribed state:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Click the `Edit inbound rules` button 4. Identify the rules to be edited or removed 5. Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule 6. Click `Save rules`;Perform the following to determine if the account is configured as prescribed:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0`   **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports.;;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#deleting-security-group-rule;FAIL;Security group launch-wizard-23 (sg-0ab76a727c327d048) has all ports open to the Internet.;arn:aws:ec2:us-east-1:851725370590:security-group/sg-0ab76a727c327d048;sg-0ab76a727c327d048;ec2_securitygroup_allow_ingress_from_internet_to_all_ports;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.3;Ensure no security groups allow ingress from ::/0 to remote server administration ports;5. Networking;Level 1;Automated;Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;When updating an existing environment, ensure that administrators have access to remote server administration ports through another mechanism before removing access by deleting the ::/0 inbound rule.;Perform the following to implement the prescribed state:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Click the `Edit inbound rules` button 4. Identify the rules to be edited or removed 5. Either A) update the Source field to a range other than ::/0, or, B) Click `Delete` to remove the offending inbound rule 6. Click `Save rules`;Perform the following to determine if the account is configured as prescribed:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `::/0`   **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports.;;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#deleting-security-group-rule;FAIL;Security group launch-wizard-23 (sg-0ab76a727c327d048) has all ports open to the Internet.;arn:aws:ec2:us-east-1:851725370590:security-group/sg-0ab76a727c327d048;sg-0ab76a727c327d048;ec2_securitygroup_allow_ingress_from_internet_to_all_ports;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.2;Ensure no security groups allow ingress from 0.0.0.0/0 to remote server administration ports;5. Networking;Level 1;Automated;Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;When updating an existing environment, ensure that administrators have access to remote server administration ports through another mechanism before removing access by deleting the 0.0.0.0/0 inbound rule.;Perform the following to implement the prescribed state:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Click the `Edit inbound rules` button 4. Identify the rules to be edited or removed 5. Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click `Delete` to remove the offending inbound rule 6. Click `Save rules`;Perform the following to determine if the account is configured as prescribed:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `0.0.0.0/0`   **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports.;;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#deleting-security-group-rule;FAIL;Security group launch-wizard-24 (sg-098d6d44b48776dea) has SSH port 22 open to the Internet.;arn:aws:ec2:us-east-1:851725370590:security-group/sg-098d6d44b48776dea;sg-098d6d44b48776dea;ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;5.3;Ensure no security groups allow ingress from ::/0 to remote server administration ports;5. Networking;Level 1;Automated;Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to remote server administration ports, such as SSH to port `22` and RDP to port `3389`.;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.;When updating an existing environment, ensure that administrators have access to remote server administration ports through another mechanism before removing access by deleting the ::/0 inbound rule.;Perform the following to implement the prescribed state:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Click the `Edit inbound rules` button 4. Identify the rules to be edited or removed 5. Either A) update the Source field to a range other than ::/0, or, B) Click `Delete` to remove the offending inbound rule 6. Click `Save rules`;Perform the following to determine if the account is configured as prescribed:  1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home) 2. In the left pane, click `Security Groups`  3. For each security group, perform the following: 1. Select the security group 2. Click the `Inbound Rules` tab 3. Ensure no rule exists that has a port range that includes port `22`, `3389`, or other remote server administration ports for your environment and has a `Source` of `::/0`   **Note:** A Port value of `ALL` or a port range such as `0-1024` are inclusive of port `22`, `3389`, and other remote server administration ports.;;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html#deleting-security-group-rule;FAIL;Security group launch-wizard-24 (sg-098d6d44b48776dea) has SSH port 22 open to the Internet.;arn:aws:ec2:us-east-1:851725370590:security-group/sg-098d6d44b48776dea;sg-098d6d44b48776dea;ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.7;Eliminate use of the 'root' user for administrative and daily tasks;1. Identity and Access Management;Level 1;Automated;With the creation of an AWS account, a 'root user' is created that cannot be disabled or deleted. That user has unrestricted access to and control over all resources in the AWS account. It is highly recommended that the use of this account be avoided for everyday tasks.;The 'root user' has unrestricted access to and control over all account resources. Use of it is inconsistent with the principles of least privilege and separation of duties, and can lead to unnecessary harm due to error or account compromise.;;If you find that the 'root' user account is being used for daily activity to include administrative tasks that do not require the 'root' user:  1. Change the 'root' user password. 2. Deactivate or delete any access keys associate with the 'root' user.  **Remember, anyone who has 'root' user credentials for your AWS account has unrestricted access to and control of all the resources in your account, including billing information.;**From Console:**  1. Login to the AWS Management Console at `https://console.aws.amazon.com/iam/` 2. In the left pane, click `Credential Report` 3. Click on `Download Report` 4. Open of Save the file locally 5. Locate the `<root account>` under the user column 6. Review `password_last_used, access_key_1_last_used_date, access_key_2_last_used_date` to determine when the 'root user' was last used.  **From Command Line:**  Run the following CLI commands to provide a credential report for determining the last time the 'root user' was used: ``` aws iam generate-credential-report ``` ``` aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,5,11,16 | grep -B1 '<root_account>' ```  Review `password_last_used`, `access_key_1_last_used_date`, `access_key_2_last_used_date` to determine when the _root user_ was last used.  **Note:** There are a few conditions under which the use of the 'root' user account is required. Please see the reference links for all of the tasks that require use of the 'root' user.;The 'root' user for us-gov cloud regions is not enabled by default. However, on request to AWS support, they can enable the 'root' user and grant access only through access-keys (CLI, API methods) for us-gov cloud region. If the 'root' user for us-gov cloud regions is enabled, this recommendation is applicable.  Monitoring usage of the 'root' user can be accomplished by implementing recommendation 3.3 Ensure a log metric filter and alarm exist for usage of the 'root' user.;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html:https://docs.aws.amazon.com/general/latest/gr/aws_tasks-that-require-root.html;FAIL;Root user in the account was last accessed 0 days ago.;arn:aws:iam::851725370590:root;<root_account>;iam_avoid_root_usage;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.4;Ensure no 'root' user account access key exists;1. Identity and Access Management;Level 1;Automated;The 'root' user account is the most privileged user in an AWS account. AWS Access Keys provide programmatic access to a given AWS account. It is recommended that all access keys associated with the 'root' user account be removed.;Removing access keys associated with the 'root' user account limits vectors by which the account can be compromised. Additionally, removing the 'root' access keys encourages the creation and use of role based accounts that are least privileged.;;Perform the following to delete or disable active 'root' user access keys  **From Console:**  1. Sign in to the AWS Management Console as 'root' and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. Click on _<Root\_Account\_Name>_ at the top right and select `My Security Credentials` from the drop down list 3. On the pop out screen Click on `Continue to Security Credentials`  4. Click on `Access Keys` _(Access Key ID and Secret Access Key)_ 5. Under the `Status` column if there are any Keys which are Active  - Click on `Make Inactive` - (Temporarily disable Key - may be needed again)  - Click `Delete` - (Deleted keys cannot be recovered);"Perform the following to determine if the 'root' user account has access keys:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM`  4. Click on `Credential Report`  5. This will download a `.csv` file which contains credential usage for all IAM users within an AWS Account - open this file 6. For the `<root_account>` user, ensure the `access_key_1_active` and `access_key_2_active` fields are set to `FALSE` .  **From Command Line:**  Run the following command: ```  aws iam get-account-summary | grep ""AccountAccessKeysPresent""  ``` If no 'root' access keys exist the output will show ""AccountAccessKeysPresent"": 0,.   If the output shows a ""1"" than 'root' keys exist, refer to the remediation procedure below.";"IAM User account ""root"" for us-gov cloud regions is not enabled by default. However, on request to AWS support enables 'root' access only through access-keys (CLI, API methods) for us-gov cloud region.";http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html:http://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html:http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountSummary.html:https://aws.amazon.com/blogs/security/an-easier-way-to-determine-the-presence-of-aws-account-access-keys/;FAIL;User <root_account> has two active access keys.;arn:aws:iam::851725370590:root;<root_account>;iam_no_root_access_key;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.8;Ensure IAM password policy requires minimum length of 14 or greater;1. Identity and Access Management;Level 1;Automated;Password policies are, in part, used to enforce password complexity requirements. IAM password policies can be used to ensure password are at least a given length. It is recommended that the password policy require a minimum password length 14.;Setting a password complexity policy increases account resiliency against brute force login attempts.;;"Perform the following to set the password policy as prescribed:  **From Console:**  1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings) 2. Go to IAM Service on the AWS Console 3. Click on Account Settings on the Left Pane 4. Set ""Minimum password length"" to `14` or greater. 5. Click ""Apply password policy""  **From Command Line:** ```  aws iam update-account-password-policy --minimum-password-length 14 ``` Note: All commands starting with ""aws iam update-account-password-policy"" can be combined into a single command.";"Perform the following to ensure the password policy is configured as prescribed:  **From Console:**  1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings) 2. Go to IAM Service on the AWS Console 3. Click on Account Settings on the Left Pane 4. Ensure ""Minimum password length"" is set to 14 or greater.  **From Command Line:** ``` aws iam get-account-password-policy ``` Ensure the output of the above command includes ""MinimumPasswordLength"": 14 (or higher)";;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy;FAIL;IAM password policy does not require minimum length of 14 characters.;arn:aws:iam:us-east-1:851725370590:password-policy;851725370590;iam_password_policy_minimum_length_14;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.9;Ensure IAM password policy prevents password reuse;1. Identity and Access Management;Level 1;Automated;IAM password policies can prevent the reuse of a given password by the same user. It is recommended that the password policy prevent the reuse of passwords.;Preventing password reuse increases account resiliency against brute force login attempts.;;"Perform the following to set the password policy as prescribed:  **From Console:**  1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings) 2. Go to IAM Service on the AWS Console 3. Click on Account Settings on the Left Pane 4. Check ""Prevent password reuse"" 5. Set ""Number of passwords to remember"" is set to `24`   **From Command Line:** ```  aws iam update-account-password-policy --password-reuse-prevention 24 ``` Note: All commands starting with ""aws iam update-account-password-policy"" can be combined into a single command.";"Perform the following to ensure the password policy is configured as prescribed:  **From Console:**  1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings) 2. Go to IAM Service on the AWS Console 3. Click on Account Settings on the Left Pane 4. Ensure ""Prevent password reuse"" is checked 5. Ensure ""Number of passwords to remember"" is set to 24  **From Command Line:** ``` aws iam get-account-password-policy  ``` Ensure the output of the above command includes ""PasswordReusePrevention"": 24";;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy;FAIL;IAM password policy reuse prevention is less than 24 or not set.;arn:aws:iam:us-east-1:851725370590:password-policy;851725370590;iam_password_policy_reuse_24;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.15;Ensure IAM Users Receive Permissions Only Through Groups;1. Identity and Access Management;Level 1;Automated;"IAM users are granted access to services, functions, and data through IAM policies. There are three ways to define policies for a user: 1) Edit the user policy directly, aka an inline, or user, policy; 2) attach a policy directly to a user; 3) add the user to an IAM group that has an attached policy.   Only the third implementation is recommended.";Assigning IAM policy only through groups unifies permissions management to a single, flexible layer consistent with organizational functional roles. By unifying permissions management, the likelihood of excessive permissions is reduced.;;"Perform the following to create an IAM group and assign a policy to it:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the navigation pane, click `Groups` and then click `Create New Group` . 3. In the `Group Name` box, type the name of the group and then click `Next Step` . 4. In the list of policies, select the check box for each policy that you want to apply to all members of the group. Then click `Next Step` . 5. Click `Create Group`   Perform the following to add a user to a given group:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the navigation pane, click `Groups`  3. Select the group to add a user to 4. Click `Add Users To Group`  5. Select the users to be added to the group 6. Click `Add Users`   Perform the following to remove a direct association between a user and policy:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the left navigation pane, click on Users 3. For each user:  - Select the user  - Click on the `Permissions` tab  - Expand `Permissions policies`   - Click `X` for each policy; then click Detach or Remove (depending on policy type)";Perform the following to determine if an inline policy is set or a policy is directly attached to users:  1. Run the following to get a list of IAM users: ```  aws iam list-users --query 'Users[*].UserName' --output text  ``` 2. For each user returned, run the following command to determine if any policies are attached to them: ```  aws iam list-attached-user-policies --user-name <iam_user>  aws iam list-user-policies --user-name <iam_user>  ``` 3. If any policies are returned, the user has an inline policy or direct policy attachment.;;http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html:http://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html;FAIL;User Developer has the policy AdministratorAccess attached.;arn:aws:iam::851725370590:user/Developer;Developer/AdministratorAccess;iam_policy_attached_only_to_group_or_roles;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.15;Ensure IAM Users Receive Permissions Only Through Groups;1. Identity and Access Management;Level 1;Automated;"IAM users are granted access to services, functions, and data through IAM policies. There are three ways to define policies for a user: 1) Edit the user policy directly, aka an inline, or user, policy; 2) attach a policy directly to a user; 3) add the user to an IAM group that has an attached policy.   Only the third implementation is recommended.";Assigning IAM policy only through groups unifies permissions management to a single, flexible layer consistent with organizational functional roles. By unifying permissions management, the likelihood of excessive permissions is reduced.;;"Perform the following to create an IAM group and assign a policy to it:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the navigation pane, click `Groups` and then click `Create New Group` . 3. In the `Group Name` box, type the name of the group and then click `Next Step` . 4. In the list of policies, select the check box for each policy that you want to apply to all members of the group. Then click `Next Step` . 5. Click `Create Group`   Perform the following to add a user to a given group:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the navigation pane, click `Groups`  3. Select the group to add a user to 4. Click `Add Users To Group`  5. Select the users to be added to the group 6. Click `Add Users`   Perform the following to remove a direct association between a user and policy:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the left navigation pane, click on Users 3. For each user:  - Select the user  - Click on the `Permissions` tab  - Expand `Permissions policies`   - Click `X` for each policy; then click Detach or Remove (depending on policy type)";Perform the following to determine if an inline policy is set or a policy is directly attached to users:  1. Run the following to get a list of IAM users: ```  aws iam list-users --query 'Users[*].UserName' --output text  ``` 2. For each user returned, run the following command to determine if any policies are attached to them: ```  aws iam list-attached-user-policies --user-name <iam_user>  aws iam list-user-policies --user-name <iam_user>  ``` 3. If any policies are returned, the user has an inline policy or direct policy attachment.;;http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html:http://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html;FAIL;User Developer has the policy IAMUserChangePassword attached.;arn:aws:iam::851725370590:user/Developer;Developer/IAMUserChangePassword;iam_policy_attached_only_to_group_or_roles;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.15;Ensure IAM Users Receive Permissions Only Through Groups;1. Identity and Access Management;Level 1;Automated;"IAM users are granted access to services, functions, and data through IAM policies. There are three ways to define policies for a user: 1) Edit the user policy directly, aka an inline, or user, policy; 2) attach a policy directly to a user; 3) add the user to an IAM group that has an attached policy.   Only the third implementation is recommended.";Assigning IAM policy only through groups unifies permissions management to a single, flexible layer consistent with organizational functional roles. By unifying permissions management, the likelihood of excessive permissions is reduced.;;"Perform the following to create an IAM group and assign a policy to it:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the navigation pane, click `Groups` and then click `Create New Group` . 3. In the `Group Name` box, type the name of the group and then click `Next Step` . 4. In the list of policies, select the check box for each policy that you want to apply to all members of the group. Then click `Next Step` . 5. Click `Create Group`   Perform the following to add a user to a given group:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the navigation pane, click `Groups`  3. Select the group to add a user to 4. Click `Add Users To Group`  5. Select the users to be added to the group 6. Click `Add Users`   Perform the following to remove a direct association between a user and policy:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the left navigation pane, click on Users 3. For each user:  - Select the user  - Click on the `Permissions` tab  - Expand `Permissions policies`   - Click `X` for each policy; then click Detach or Remove (depending on policy type)";Perform the following to determine if an inline policy is set or a policy is directly attached to users:  1. Run the following to get a list of IAM users: ```  aws iam list-users --query 'Users[*].UserName' --output text  ``` 2. For each user returned, run the following command to determine if any policies are attached to them: ```  aws iam list-attached-user-policies --user-name <iam_user>  aws iam list-user-policies --user-name <iam_user>  ``` 3. If any policies are returned, the user has an inline policy or direct policy attachment.;;http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html:http://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html;FAIL;User Manjeet has the policy AdministratorAccess attached.;arn:aws:iam::851725370590:user/Manjeet;Manjeet/AdministratorAccess;iam_policy_attached_only_to_group_or_roles;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.6;Ensure hardware MFA is enabled for the 'root' user account;1. Identity and Access Management;Level 2;Automated;The 'root' user account is the most privileged user in an AWS account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to an AWS website, they will be prompted for their user name and password as well as for an authentication code from their AWS MFA device. For Level 2, it is recommended that the 'root' user account be protected with a hardware MFA.;A hardware MFA has a smaller attack surface than a virtual MFA. For example, a hardware MFA does not suffer the attack surface introduced by the mobile smartphone on which a virtual MFA resides.  **Note**: Using hardware MFA for many, many AWS accounts may create a logistical device management issue. If this is the case, consider implementing this Level 2 recommendation selectively to the highest security AWS accounts and the Level 1 recommendation applied to the remaining accounts.;;Perform the following to establish a hardware MFA for the 'root' user account:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). Note: to manage MFA devices for the AWS 'root' user account, you must use your 'root' account credentials to sign in to AWS. You cannot manage MFA devices for the 'root' account using other credentials. 2. Choose `Dashboard` , and under `Security Status` , expand `Activate MFA` on your root account. 3. Choose `Activate MFA`  4. In the wizard, choose `A hardware MFA` device and then choose `Next Step` . 5. In the `Serial Number` box, enter the serial number that is found on the back of the MFA device. 6. In the `Authentication Code 1` box, enter the six-digit number displayed by the MFA device. You might need to press the button on the front of the device to display the number. 7. Wait 30 seconds while the device refreshes the code, and then enter the next six-digit number into the `Authentication Code 2` box. You might need to press the button on the front of the device again to display the second number. 8. Choose `Next Step` . The MFA device is now associated with the AWS account. The next time you use your AWS account credentials to sign in, you must type a code from the hardware MFA device.  Remediation for this recommendation is not available through AWS CLI.;"Perform the following to determine if the 'root' user account has a hardware MFA setup:  1. Run the following command to determine if the 'root' account has MFA setup: ```  aws iam get-account-summary | grep ""AccountMFAEnabled"" ```  The `AccountMFAEnabled` property is set to `1` will ensure that the 'root' user account has MFA (Virtual or Hardware) Enabled. If `AccountMFAEnabled` property is set to `0` the account is not compliant with this recommendation.  2. If `AccountMFAEnabled` property is set to `1`, determine 'root' account has Hardware MFA enabled. Run the following command to list all virtual MFA devices: ```  aws iam list-virtual-mfa-devices  ``` If the output contains one MFA with the following Serial Number, it means the MFA is virtual, not hardware and the account is not compliant with this recommendation:   `""SerialNumber"": ""arn:aws:iam::_<aws_account_number>_:mfa/root-account-mfa-device""`";IAM User account 'root' for us-gov cloud regions does not have console access. This control is not applicable for us-gov cloud regions.;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_virtual.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_physical.html#enable-hw-mfa-for-root;FAIL;MFA is not enabled for root account.;arn:aws:iam:us-east-1:851725370590:mfa;<root_account>;iam_root_hardware_mfa_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.5;Ensure MFA is enabled for the 'root' user account;1. Identity and Access Management;Level 1;Automated;"The 'root' user account is the most privileged user in an AWS account. Multi-factor Authentication (MFA) adds an extra layer of protection on top of a username and password. With MFA enabled, when a user signs in to an AWS website, they will be prompted for their username and password as well as for an authentication code from their AWS MFA device.  **Note:** When virtual MFA is used for 'root' accounts, it is recommended that the device used is NOT a personal device, but rather a dedicated mobile device (tablet or phone) that is managed to be kept charged and secured independent of any individual personal devices. (""non-personal virtual MFA"") This lessens the risks of losing access to the MFA due to device loss, device trade-in or if the individual owning the device is no longer employed at the company.";Enabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that emits a time-sensitive key and have knowledge of a credential.;;Perform the following to establish MFA for the 'root' user account:  1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/).   Note: to manage MFA devices for the 'root' AWS account, you must use your 'root' account credentials to sign in to AWS. You cannot manage MFA devices for the 'root' account using other credentials.  2. Choose `Dashboard` , and under `Security Status` , expand `Activate MFA` on your root account. 3. Choose `Activate MFA`  4. In the wizard, choose `A virtual MFA` device and then choose `Next Step` . 5. IAM generates and displays configuration information for the virtual MFA device, including a QR code graphic. The graphic is a representation of the 'secret configuration key' that is available for manual entry on devices that do not support QR codes. 6. Open your virtual MFA application. (For a list of apps that you can use for hosting virtual MFA devices, see [Virtual MFA Applications](http://aws.amazon.com/iam/details/mfa/#Virtual_MFA_Applications).) If the virtual MFA application supports multiple accounts (multiple virtual MFA devices), choose the option to create a new account (a new virtual MFA device). 7. Determine whether the MFA app supports QR codes, and then do one of the following:   - Use the app to scan the QR code. For example, you might choose the camera icon or choose an option similar to Scan code, and then use the device's camera to scan the code.  - In the Manage MFA Device wizard, choose Show secret key for manual configuration, and then type the secret configuration key into your MFA application.  When you are finished, the virtual MFA device starts generating one-time passwords.  In the Manage MFA Device wizard, in the Authentication Code 1 box, type the one-time password that currently appears in the virtual MFA device. Wait up to 30 seconds for the device to generate a new one-time password. Then type the second one-time password into the Authentication Code 2 box. Choose Assign Virtual MFA.;"Perform the following to determine if the 'root' user account has MFA setup:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM`  4. Click on `Credential Report`  5. This will download a `.csv` file which contains credential usage for all IAM users within an AWS Account - open this file 6. For the `<root_account>` user, ensure the `mfa_active` field is set to `TRUE` .  **From Command Line:**  1. Run the following command: ```  aws iam get-account-summary | grep ""AccountMFAEnabled"" ``` 2. Ensure the AccountMFAEnabled property is set to 1";"IAM User account ""root"" for us-gov cloud regions does not have console access. This recommendation is not applicable for us-gov cloud regions.";https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html#id_root-user_manage_mfa:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_virtual.html#enable-virt-mfa-for-root;FAIL;MFA is not enabled for root account.;arn:aws:iam::851725370590:root;<root_account>;iam_root_mfa_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.14;Ensure access keys are rotated every 90 days or less;1. Identity and Access Management;Level 1;Automated;Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. AWS users need their own access keys to make programmatic calls to AWS from the AWS Command Line Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct HTTP calls using the APIs for individual AWS services. It is recommended that all access keys be regularly rotated.;Rotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.  Access keys should be rotated to ensure that data cannot be accessed with an old key which might have been lost, cracked, or stolen.;;Perform the following to rotate access keys:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click on `Security Credentials`  4. As an Administrator   - Click on `Make Inactive` for keys that have not been rotated in `90` Days 5. As an IAM User  - Click on `Make Inactive` or `Delete` for keys which have not been rotated or used in `90` Days 6. Click on `Create Access Key`  7. Update programmatic call with new Access Key credentials  **From Command Line:**  1. While the first access key is still active, create a second access key, which is active by default. Run the following command: ``` aws iam create-access-key ```  At this point, the user has two active access keys.  2. Update all applications and tools to use the new access key. 3. Determine whether the first access key is still in use by using this command: ``` aws iam get-access-key-last-used ``` 4. One approach is to wait several days and then check the old access key for any use before proceeding.  Even if step Step 3 indicates no use of the old key, it is recommended that you do not immediately delete the first access key. Instead, change the state of the first access key to Inactive using this command: ``` aws iam update-access-key ``` 5. Use only the new access key to confirm that your applications are working. Any applications and tools that still use the original access key will stop working at this point because they no longer have access to AWS resources. If you find such an application or tool, you can switch its state back to Active to reenable the first access key. Then return to step Step 2 and update this application to use the new key.  6. After you wait some period of time to ensure that all applications and tools have been updated, you can delete the first access key with this command: ``` aws iam delete-access-key ```;Perform the following to determine if access keys are rotated as prescribed:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click `setting` icon 4. Select `Console last sign-in` 5. Click `Close` 6. Ensure that `Access key age` is less than 90 days ago. note) `None` in the `Access key age` means the user has not used the access key.  **From Command Line:**  ``` aws iam generate-credential-report aws iam get-credential-report --query 'Content' --output text | base64 -d ``` The `access_key_1_last_rotated` field in this file notes The date and time, in ISO 8601 date-time format, when the user's access key was created or last changed. If the user does not have an active access key, the value in this field is N/A (not applicable).;;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#rotate-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User <root_account> has not rotated access key 1 in over 90 days (202 days).;arn:aws:iam::851725370590:root;<root_account>;iam_rotate_access_key_90_days;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.14;Ensure access keys are rotated every 90 days or less;1. Identity and Access Management;Level 1;Automated;Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. AWS users need their own access keys to make programmatic calls to AWS from the AWS Command Line Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct HTTP calls using the APIs for individual AWS services. It is recommended that all access keys be regularly rotated.;Rotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.  Access keys should be rotated to ensure that data cannot be accessed with an old key which might have been lost, cracked, or stolen.;;Perform the following to rotate access keys:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click on `Security Credentials`  4. As an Administrator   - Click on `Make Inactive` for keys that have not been rotated in `90` Days 5. As an IAM User  - Click on `Make Inactive` or `Delete` for keys which have not been rotated or used in `90` Days 6. Click on `Create Access Key`  7. Update programmatic call with new Access Key credentials  **From Command Line:**  1. While the first access key is still active, create a second access key, which is active by default. Run the following command: ``` aws iam create-access-key ```  At this point, the user has two active access keys.  2. Update all applications and tools to use the new access key. 3. Determine whether the first access key is still in use by using this command: ``` aws iam get-access-key-last-used ``` 4. One approach is to wait several days and then check the old access key for any use before proceeding.  Even if step Step 3 indicates no use of the old key, it is recommended that you do not immediately delete the first access key. Instead, change the state of the first access key to Inactive using this command: ``` aws iam update-access-key ``` 5. Use only the new access key to confirm that your applications are working. Any applications and tools that still use the original access key will stop working at this point because they no longer have access to AWS resources. If you find such an application or tool, you can switch its state back to Active to reenable the first access key. Then return to step Step 2 and update this application to use the new key.  6. After you wait some period of time to ensure that all applications and tools have been updated, you can delete the first access key with this command: ``` aws iam delete-access-key ```;Perform the following to determine if access keys are rotated as prescribed:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click `setting` icon 4. Select `Console last sign-in` 5. Click `Close` 6. Ensure that `Access key age` is less than 90 days ago. note) `None` in the `Access key age` means the user has not used the access key.  **From Command Line:**  ``` aws iam generate-credential-report aws iam get-credential-report --query 'Content' --output text | base64 -d ``` The `access_key_1_last_rotated` field in this file notes The date and time, in ISO 8601 date-time format, when the user's access key was created or last changed. If the user does not have an active access key, the value in this field is N/A (not applicable).;;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#rotate-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User <root_account> has not rotated access key 2 in over 90 days (202 days).;arn:aws:iam::851725370590:root;<root_account>;iam_rotate_access_key_90_days;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.14;Ensure access keys are rotated every 90 days or less;1. Identity and Access Management;Level 1;Automated;Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. AWS users need their own access keys to make programmatic calls to AWS from the AWS Command Line Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct HTTP calls using the APIs for individual AWS services. It is recommended that all access keys be regularly rotated.;Rotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.  Access keys should be rotated to ensure that data cannot be accessed with an old key which might have been lost, cracked, or stolen.;;Perform the following to rotate access keys:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click on `Security Credentials`  4. As an Administrator   - Click on `Make Inactive` for keys that have not been rotated in `90` Days 5. As an IAM User  - Click on `Make Inactive` or `Delete` for keys which have not been rotated or used in `90` Days 6. Click on `Create Access Key`  7. Update programmatic call with new Access Key credentials  **From Command Line:**  1. While the first access key is still active, create a second access key, which is active by default. Run the following command: ``` aws iam create-access-key ```  At this point, the user has two active access keys.  2. Update all applications and tools to use the new access key. 3. Determine whether the first access key is still in use by using this command: ``` aws iam get-access-key-last-used ``` 4. One approach is to wait several days and then check the old access key for any use before proceeding.  Even if step Step 3 indicates no use of the old key, it is recommended that you do not immediately delete the first access key. Instead, change the state of the first access key to Inactive using this command: ``` aws iam update-access-key ``` 5. Use only the new access key to confirm that your applications are working. Any applications and tools that still use the original access key will stop working at this point because they no longer have access to AWS resources. If you find such an application or tool, you can switch its state back to Active to reenable the first access key. Then return to step Step 2 and update this application to use the new key.  6. After you wait some period of time to ensure that all applications and tools have been updated, you can delete the first access key with this command: ``` aws iam delete-access-key ```;Perform the following to determine if access keys are rotated as prescribed:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click `setting` icon 4. Select `Console last sign-in` 5. Click `Close` 6. Ensure that `Access key age` is less than 90 days ago. note) `None` in the `Access key age` means the user has not used the access key.  **From Command Line:**  ``` aws iam generate-credential-report aws iam get-credential-report --query 'Content' --output text | base64 -d ``` The `access_key_1_last_rotated` field in this file notes The date and time, in ISO 8601 date-time format, when the user's access key was created or last changed. If the user does not have an active access key, the value in this field is N/A (not applicable).;;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#rotate-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User Developer has not rotated access key 1 in over 90 days (223 days).;arn:aws:iam::851725370590:user/Developer;Developer;iam_rotate_access_key_90_days;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.14;Ensure access keys are rotated every 90 days or less;1. Identity and Access Management;Level 1;Automated;Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. AWS users need their own access keys to make programmatic calls to AWS from the AWS Command Line Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct HTTP calls using the APIs for individual AWS services. It is recommended that all access keys be regularly rotated.;Rotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.  Access keys should be rotated to ensure that data cannot be accessed with an old key which might have been lost, cracked, or stolen.;;Perform the following to rotate access keys:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click on `Security Credentials`  4. As an Administrator   - Click on `Make Inactive` for keys that have not been rotated in `90` Days 5. As an IAM User  - Click on `Make Inactive` or `Delete` for keys which have not been rotated or used in `90` Days 6. Click on `Create Access Key`  7. Update programmatic call with new Access Key credentials  **From Command Line:**  1. While the first access key is still active, create a second access key, which is active by default. Run the following command: ``` aws iam create-access-key ```  At this point, the user has two active access keys.  2. Update all applications and tools to use the new access key. 3. Determine whether the first access key is still in use by using this command: ``` aws iam get-access-key-last-used ``` 4. One approach is to wait several days and then check the old access key for any use before proceeding.  Even if step Step 3 indicates no use of the old key, it is recommended that you do not immediately delete the first access key. Instead, change the state of the first access key to Inactive using this command: ``` aws iam update-access-key ``` 5. Use only the new access key to confirm that your applications are working. Any applications and tools that still use the original access key will stop working at this point because they no longer have access to AWS resources. If you find such an application or tool, you can switch its state back to Active to reenable the first access key. Then return to step Step 2 and update this application to use the new key.  6. After you wait some period of time to ensure that all applications and tools have been updated, you can delete the first access key with this command: ``` aws iam delete-access-key ```;Perform the following to determine if access keys are rotated as prescribed:  **From Console:**  1. Go to Management Console (https://console.aws.amazon.com/iam) 2. Click on `Users` 3. Click `setting` icon 4. Select `Console last sign-in` 5. Click `Close` 6. Ensure that `Access key age` is less than 90 days ago. note) `None` in the `Access key age` means the user has not used the access key.  **From Command Line:**  ``` aws iam generate-credential-report aws iam get-credential-report --query 'Content' --output text | base64 -d ``` The `access_key_1_last_rotated` field in this file notes The date and time, in ISO 8601 date-time format, when the user's access key was created or last changed. If the user does not have an active access key, the value in this field is N/A (not applicable).;;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#rotate-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User Manjeet has not rotated access key 1 in over 90 days (154 days).;arn:aws:iam::851725370590:user/Manjeet;Manjeet;iam_rotate_access_key_90_days;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.12;Ensure credentials unused for 45 days or greater are disabled;1. Identity and Access Management;Level 1;Automated;AWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 45 or greater days be deactivated or removed.;Disabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.;;**From Console:**  Perform the following to manage Unused Password (IAM user console access)  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. Select user whose `Console last sign-in` is greater than 45 days 7. Click `Security credentials` 8. In section `Sign-in credentials`, `Console password` click `Manage`  9. Under Console Access select `Disable` 10.Click `Apply`  Perform the following to deactivate Access Keys:  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. Select any access keys that are over 45 days old and that have been used and   - Click on `Make Inactive` 7. Select any access keys that are over 45 days old and that have not been used and   - Click the X to `Delete`;Perform the following to determine if unused credentials exist:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM` 4. Click on `Users` 5. Click the `Settings` (gear) icon. 6. Select `Console last sign-in`, `Access key last used`, and `Access Key Id` 7. Click on `Close`  8. Check and ensure that `Console last sign-in` is less than 45 days ago.  **Note** - `Never` means the user has never logged in.  9. Check and ensure that `Access key age` is less than 45 days and that `Access key last used` does not say `None`  If the user hasn't signed into the Console in the last 45 days or Access keys are over 45 days old refer to the remediation.  **From Command Line:**  **Download Credential Report:**  1. Run the following commands: ```  aws iam generate-credential-report   aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,5,6,9,10,11,14,15,16 | grep -v '^<root_account>' ```  **Ensure unused credentials do not exist:**  2. For each user having `password_enabled` set to `TRUE` , ensure `password_last_used_date` is less than `45` days ago.  - When `password_enabled` is set to `TRUE` and `password_last_used` is set to `No_Information` , ensure `password_last_changed` is less than 45 days ago.  3. For each user having an `access_key_1_active` or `access_key_2_active` to `TRUE` , ensure the corresponding `access_key_n_last_used_date` is less than `45` days ago.  - When a user having an `access_key_x_active` (where x is 1 or 2) to `TRUE` and corresponding access_key_x_last_used_date is set to `N/A', ensure `access_key_x_last_rotated` is less than 45 days ago.;<root_account> is excluded in the audit since the root account should not be used for day to day business and would likely be unused for more than 45 days.;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#remove-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User Manjeet has not used access key 1 in the last 45 days (154 days).;arn:aws:iam::851725370590:user/Manjeet;Manjeet/AccessKey1;iam_user_accesskey_unused;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.12;Ensure credentials unused for 45 days or greater are disabled;1. Identity and Access Management;Level 1;Automated;AWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 45 or greater days be deactivated or removed.;Disabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.;;**From Console:**  Perform the following to manage Unused Password (IAM user console access)  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. Select user whose `Console last sign-in` is greater than 45 days 7. Click `Security credentials` 8. In section `Sign-in credentials`, `Console password` click `Manage`  9. Under Console Access select `Disable` 10.Click `Apply`  Perform the following to deactivate Access Keys:  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. Select any access keys that are over 45 days old and that have been used and   - Click on `Make Inactive` 7. Select any access keys that are over 45 days old and that have not been used and   - Click the X to `Delete`;Perform the following to determine if unused credentials exist:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM` 4. Click on `Users` 5. Click the `Settings` (gear) icon. 6. Select `Console last sign-in`, `Access key last used`, and `Access Key Id` 7. Click on `Close`  8. Check and ensure that `Console last sign-in` is less than 45 days ago.  **Note** - `Never` means the user has never logged in.  9. Check and ensure that `Access key age` is less than 45 days and that `Access key last used` does not say `None`  If the user hasn't signed into the Console in the last 45 days or Access keys are over 45 days old refer to the remediation.  **From Command Line:**  **Download Credential Report:**  1. Run the following commands: ```  aws iam generate-credential-report   aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,5,6,9,10,11,14,15,16 | grep -v '^<root_account>' ```  **Ensure unused credentials do not exist:**  2. For each user having `password_enabled` set to `TRUE` , ensure `password_last_used_date` is less than `45` days ago.  - When `password_enabled` is set to `TRUE` and `password_last_used` is set to `No_Information` , ensure `password_last_changed` is less than 45 days ago.  3. For each user having an `access_key_1_active` or `access_key_2_active` to `TRUE` , ensure the corresponding `access_key_n_last_used_date` is less than `45` days ago.  - When a user having an `access_key_x_active` (where x is 1 or 2) to `TRUE` and corresponding access_key_x_last_used_date is set to `N/A', ensure `access_key_x_last_rotated` is less than 45 days ago.;<root_account> is excluded in the audit since the root account should not be used for day to day business and would likely be unused for more than 45 days.;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#remove-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User Manjeet has not used access key 2 in the last 45 days (62 days).;arn:aws:iam::851725370590:user/Manjeet;Manjeet/AccessKey2;iam_user_accesskey_unused;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.12;Ensure credentials unused for 45 days or greater are disabled;1. Identity and Access Management;Level 1;Automated;AWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 45 or greater days be deactivated or removed.;Disabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.;;**From Console:**  Perform the following to manage Unused Password (IAM user console access)  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. Select user whose `Console last sign-in` is greater than 45 days 7. Click `Security credentials` 8. In section `Sign-in credentials`, `Console password` click `Manage`  9. Under Console Access select `Disable` 10.Click `Apply`  Perform the following to deactivate Access Keys:  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. Select any access keys that are over 45 days old and that have been used and   - Click on `Make Inactive` 7. Select any access keys that are over 45 days old and that have not been used and   - Click the X to `Delete`;Perform the following to determine if unused credentials exist:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM` 4. Click on `Users` 5. Click the `Settings` (gear) icon. 6. Select `Console last sign-in`, `Access key last used`, and `Access Key Id` 7. Click on `Close`  8. Check and ensure that `Console last sign-in` is less than 45 days ago.  **Note** - `Never` means the user has never logged in.  9. Check and ensure that `Access key age` is less than 45 days and that `Access key last used` does not say `None`  If the user hasn't signed into the Console in the last 45 days or Access keys are over 45 days old refer to the remediation.  **From Command Line:**  **Download Credential Report:**  1. Run the following commands: ```  aws iam generate-credential-report   aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,5,6,9,10,11,14,15,16 | grep -v '^<root_account>' ```  **Ensure unused credentials do not exist:**  2. For each user having `password_enabled` set to `TRUE` , ensure `password_last_used_date` is less than `45` days ago.  - When `password_enabled` is set to `TRUE` and `password_last_used` is set to `No_Information` , ensure `password_last_changed` is less than 45 days ago.  3. For each user having an `access_key_1_active` or `access_key_2_active` to `TRUE` , ensure the corresponding `access_key_n_last_used_date` is less than `45` days ago.  - When a user having an `access_key_x_active` (where x is 1 or 2) to `TRUE` and corresponding access_key_x_last_used_date is set to `N/A', ensure `access_key_x_last_rotated` is less than 45 days ago.;<root_account> is excluded in the audit since the root account should not be used for day to day business and would likely be unused for more than 45 days.;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#remove-credentials:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html;FAIL;User Developer has not logged in to the console in the past 45 days (223 days).;arn:aws:iam::851725370590:user/Developer;Developer;iam_user_console_access_unused;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.10;Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password;1. Identity and Access Management;Level 1;Automated;Multi-Factor Authentication (MFA) adds an extra layer of authentication assurance beyond traditional credentials. With MFA enabled, when a user signs in to the AWS Console, they will be prompted for their user name and password as well as for an authentication code from their physical or virtual MFA token. It is recommended that MFA be enabled for all accounts that have a console password.;Enabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that displays a time-sensitive key and have knowledge of a credential.;AWS will soon end support for SMS multi-factor authentication (MFA). New customers are not allowed to use this feature. We recommend that existing customers switch to one of the following alternative methods of MFA.;Perform the following to enable MFA:  **From Console:**  1. Sign in to the AWS Management Console and open the IAM console at 'https://console.aws.amazon.com/iam/' 2. In the left pane, select `Users`. 3. In the `User Name` list, choose the name of the intended MFA user. 4. Choose the `Security Credentials` tab, and then choose `Manage MFA Device`. 5. In the `Manage MFA Device wizard`, choose `Virtual MFA` device, and then choose `Continue`.   IAM generates and displays configuration information for the virtual MFA device, including a QR code graphic. The graphic is a representation of the 'secret configuration key' that is available for manual entry on devices that do not support QR codes.  6. Open your virtual MFA application. (For a list of apps that you can use for hosting virtual MFA devices, see Virtual MFA Applications at https://aws.amazon.com/iam/details/mfa/#Virtual_MFA_Applications). If the virtual MFA application supports multiple accounts (multiple virtual MFA devices), choose the option to create a new account (a new virtual MFA device). 7. Determine whether the MFA app supports QR codes, and then do one of the following:   - Use the app to scan the QR code. For example, you might choose the camera icon or choose an option similar to Scan code, and then use the device's camera to scan the code.  - In the Manage MFA Device wizard, choose Show secret key for manual configuration, and then type the secret configuration key into your MFA application.   When you are finished, the virtual MFA device starts generating one-time passwords.  8. In the `Manage MFA Device wizard`, in the `MFA Code 1 box`, type the `one-time password` that currently appears in the virtual MFA device. Wait up to 30 seconds for the device to generate a new one-time password. Then type the second `one-time password` into the `MFA Code 2 box`.  9. Click `Assign MFA`.;Perform the following to determine if a MFA device is enabled for all IAM users having a console password:  **From Console:**  1. Open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/). 2. In the left pane, select `Users`  3. If the `MFA` or `Password age` columns are not visible in the table, click the gear icon at the upper right corner of the table and ensure a checkmark is next to both, then click `Close`. 4. Ensure that for each user where the `Password age` column shows a password age, the `MFA` column shows `Virtual`, `U2F Security Key`, or `Hardware`.  **From Command Line:**  1. Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their password and MFA status: ```  aws iam generate-credential-report ``` ```  aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,8  ``` 2. The output of this command will produce a table similar to the following: ```  user,password_enabled,mfa_active  elise,false,false  brandon,true,true  rakesh,false,false  helene,false,false  paras,true,true  anitha,false,false  ``` 3. For any column having `password_enabled` set to `true` , ensure `mfa_active` is also set to `true.`;**Forced IAM User Self-Service Remediation**  Amazon has published a pattern that forces users to self-service setup MFA before they have access to their complete permissions set. Until they complete this step, they cannot access their full permissions. This pattern can be used on new AWS accounts. It can also be used on existing accounts - it is recommended users are given instructions and a grace period to accomplish MFA enrollment before active enforcement on existing AWS accounts.;https://tools.ietf.org/html/rfc6238:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#enable-mfa-for-privileged-users:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_virtual.html:https://blogs.aws.amazon.com/security/post/Tx2SJJYE082KBUK/How-to-Delegate-Management-of-Multi-Factor-Authentication-to-AWS-IAM-Users;FAIL;User Developer has Console Password enabled but MFA disabled.;arn:aws:iam::851725370590:user/Developer;Developer;iam_user_mfa_enabled_console_access;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.11;Do not setup access keys during initial user setup for all IAM users that have a console password;1. Identity and Access Management;Level 1;Automated;AWS console defaults to no check boxes selected when creating a new IAM user. When cerating the IAM User credentials you have to determine what type of access they require.   Programmatic access: The IAM user might need to make API calls, use the AWS CLI, or use the Tools for Windows PowerShell. In that case, create an access key (access key ID and a secret access key) for that user.   AWS Management Console access: If the user needs to access the AWS Management Console, create a password for the user.;Requiring the additional steps be taken by the user for programmatic access after their profile has been created will give a stronger indication of intent that access keys are [a] necessary for their work and [b] once the access key is established on an account that the keys may be in use somewhere in the organization.  **Note**: Even if it is known the user will need access keys, require them to create the keys themselves or put in a support ticket to have them created as a separate step from user creation.;;Perform the following to delete access keys that do not pass the audit:  **From Console:**  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. As an Administrator   - Click on the X `(Delete)` for keys that were created at the same time as the user profile but have not been used. 7. As an IAM User  - Click on the X `(Delete)` for keys that were created at the same time as the user profile but have not been used.  **From Command Line:** ``` aws iam delete-access-key --access-key-id <access-key-id-listed> --user-name <users-name> ```;Perform the following to determine if access keys were created upon user creation and are being used and rotated as prescribed:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM`  4. Click on a User where column `Password age` and `Access key age` is not set to `None` 5. Click on `Security credentials` Tab 6. Compare the user 'Creation time` to the Access Key `Created` date. 6. For any that match, the key was created during initial user setup.  - Keys that were created at the same time as the user profile and do not have a last used date should be deleted. Refer to the remediation below.  **From Command Line:**  1. Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their access keys utilization: ```  aws iam generate-credential-report ``` ```  aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,9,11,14,16 ``` 2. The output of this command will produce a table similar to the following: ``` user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_key_2_active,access_key_2_last_used_date  elise,false,true,2015-04-16T15:14:00+00:00,false,N/A  brandon,true,true,N/A,false,N/A  rakesh,false,false,N/A,false,N/A  helene,false,true,2015-11-18T17:47:00+00:00,false,N/A  paras,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00  anitha,true,true,2016-06-08T11:43:00+00:00,true,N/A  ``` 3. For any user having `password_enabled` set to `true` AND `access_key_last_used_date` set to `N/A` refer to the remediation below.;"Credential report does not appear to contain ""Key Creation Date""";https://docs.aws.amazon.com/cli/latest/reference/iam/delete-access-key.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html;FAIL;User <root_account> has never used access key 1.;arn:aws:iam::851725370590:root;<root_account>;iam_user_no_setup_initial_access_key;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.11;Do not setup access keys during initial user setup for all IAM users that have a console password;1. Identity and Access Management;Level 1;Automated;AWS console defaults to no check boxes selected when creating a new IAM user. When cerating the IAM User credentials you have to determine what type of access they require.   Programmatic access: The IAM user might need to make API calls, use the AWS CLI, or use the Tools for Windows PowerShell. In that case, create an access key (access key ID and a secret access key) for that user.   AWS Management Console access: If the user needs to access the AWS Management Console, create a password for the user.;Requiring the additional steps be taken by the user for programmatic access after their profile has been created will give a stronger indication of intent that access keys are [a] necessary for their work and [b] once the access key is established on an account that the keys may be in use somewhere in the organization.  **Note**: Even if it is known the user will need access keys, require them to create the keys themselves or put in a support ticket to have them created as a separate step from user creation.;;Perform the following to delete access keys that do not pass the audit:  **From Console:**  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. As an Administrator   - Click on the X `(Delete)` for keys that were created at the same time as the user profile but have not been used. 7. As an IAM User  - Click on the X `(Delete)` for keys that were created at the same time as the user profile but have not been used.  **From Command Line:** ``` aws iam delete-access-key --access-key-id <access-key-id-listed> --user-name <users-name> ```;Perform the following to determine if access keys were created upon user creation and are being used and rotated as prescribed:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM`  4. Click on a User where column `Password age` and `Access key age` is not set to `None` 5. Click on `Security credentials` Tab 6. Compare the user 'Creation time` to the Access Key `Created` date. 6. For any that match, the key was created during initial user setup.  - Keys that were created at the same time as the user profile and do not have a last used date should be deleted. Refer to the remediation below.  **From Command Line:**  1. Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their access keys utilization: ```  aws iam generate-credential-report ``` ```  aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,9,11,14,16 ``` 2. The output of this command will produce a table similar to the following: ``` user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_key_2_active,access_key_2_last_used_date  elise,false,true,2015-04-16T15:14:00+00:00,false,N/A  brandon,true,true,N/A,false,N/A  rakesh,false,false,N/A,false,N/A  helene,false,true,2015-11-18T17:47:00+00:00,false,N/A  paras,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00  anitha,true,true,2016-06-08T11:43:00+00:00,true,N/A  ``` 3. For any user having `password_enabled` set to `true` AND `access_key_last_used_date` set to `N/A` refer to the remediation below.;"Credential report does not appear to contain ""Key Creation Date""";https://docs.aws.amazon.com/cli/latest/reference/iam/delete-access-key.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html;FAIL;User <root_account> has never used access key 2.;arn:aws:iam::851725370590:root;<root_account>;iam_user_no_setup_initial_access_key;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.11;Do not setup access keys during initial user setup for all IAM users that have a console password;1. Identity and Access Management;Level 1;Automated;AWS console defaults to no check boxes selected when creating a new IAM user. When cerating the IAM User credentials you have to determine what type of access they require.   Programmatic access: The IAM user might need to make API calls, use the AWS CLI, or use the Tools for Windows PowerShell. In that case, create an access key (access key ID and a secret access key) for that user.   AWS Management Console access: If the user needs to access the AWS Management Console, create a password for the user.;Requiring the additional steps be taken by the user for programmatic access after their profile has been created will give a stronger indication of intent that access keys are [a] necessary for their work and [b] once the access key is established on an account that the keys may be in use somewhere in the organization.  **Note**: Even if it is known the user will need access keys, require them to create the keys themselves or put in a support ticket to have them created as a separate step from user creation.;;Perform the following to delete access keys that do not pass the audit:  **From Console:**  1. Login to the AWS Management Console: 2. Click `Services`  3. Click `IAM`  4. Click on `Users`  5. Click on `Security Credentials`  6. As an Administrator   - Click on the X `(Delete)` for keys that were created at the same time as the user profile but have not been used. 7. As an IAM User  - Click on the X `(Delete)` for keys that were created at the same time as the user profile but have not been used.  **From Command Line:** ``` aws iam delete-access-key --access-key-id <access-key-id-listed> --user-name <users-name> ```;Perform the following to determine if access keys were created upon user creation and are being used and rotated as prescribed:  **From Console:**  1. Login to the AWS Management Console 2. Click `Services`  3. Click `IAM`  4. Click on a User where column `Password age` and `Access key age` is not set to `None` 5. Click on `Security credentials` Tab 6. Compare the user 'Creation time` to the Access Key `Created` date. 6. For any that match, the key was created during initial user setup.  - Keys that were created at the same time as the user profile and do not have a last used date should be deleted. Refer to the remediation below.  **From Command Line:**  1. Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their access keys utilization: ```  aws iam generate-credential-report ``` ```  aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,9,11,14,16 ``` 2. The output of this command will produce a table similar to the following: ``` user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_key_2_active,access_key_2_last_used_date  elise,false,true,2015-04-16T15:14:00+00:00,false,N/A  brandon,true,true,N/A,false,N/A  rakesh,false,false,N/A,false,N/A  helene,false,true,2015-11-18T17:47:00+00:00,false,N/A  paras,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00  anitha,true,true,2016-06-08T11:43:00+00:00,true,N/A  ``` 3. For any user having `password_enabled` set to `true` AND `access_key_last_used_date` set to `N/A` refer to the remediation below.;"Credential report does not appear to contain ""Key Creation Date""";https://docs.aws.amazon.com/cli/latest/reference/iam/delete-access-key.html:https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html;FAIL;User Developer has never used access key 1.;arn:aws:iam::851725370590:user/Developer;Developer;iam_user_no_setup_initial_access_key;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.13;Ensure there is only one active access key available for any single IAM user;1. Identity and Access Management;Level 1;Automated;Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK);Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API. One of the best ways to protect your account is to not allow users to have multiple access keys.;;**From Console:**  1. Sign in to the AWS Management Console and navigate to IAM dashboard at `https://console.aws.amazon.com/iam/`. 2. In the left navigation panel, choose `Users`. 3. Click on the IAM user name that you want to examine. 4. On the IAM user configuration page, select `Security Credentials` tab. 5. In `Access Keys` section, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working. 6. In the same `Access Keys` section, identify your non-operational access keys (other than the chosen one) and deactivate it by clicking the `Make Inactive` link. 7. If you receive the `Change Key Status` confirmation box, click `Deactivate` to switch off the selected key. 8. Repeat steps no. 3 – 7 for each IAM user in your AWS account.  **From Command Line:**  1. Using the IAM user and access key information provided in the `Audit CLI`, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working.  2. Run the `update-access-key` command below using the IAM user name and the non-operational access key IDs to deactivate the unnecessary key(s). Refer to the Audit section to identify the unnecessary access key ID for the selected IAM user  **Note** - the command does not return any output: ``` aws iam update-access-key --access-key-id <access-key-id> --status Inactive --user-name <user-name> ``` 3. To confirm that the selected access key pair has been successfully `deactivated` run the `list-access-keys` audit command again for that IAM User: ``` aws iam list-access-keys --user-name <user-name> ``` - The command output should expose the metadata for each access key associated with the IAM user. If the non-operational key pair(s) `Status` is set to `Inactive`, the key has been successfully deactivated and the IAM user access configuration adheres now to this recommendation.  4. Repeat steps no. 1 – 3 for each IAM user in your AWS account.;"**From Console:**  1. Sign in to the AWS Management Console and navigate to IAM dashboard at `https://console.aws.amazon.com/iam/`. 2. In the left navigation panel, choose `Users`. 3. Click on the IAM user name that you want to examine. 4. On the IAM user configuration page, select `Security Credentials` tab. 5. Under `Access Keys` section, in the Status column, check the current status for each access key associated with the IAM user. If the selected IAM user has more than one access key activated then the users access configuration does not adhere to security best practices and the risk of accidental exposures increases. - Repeat steps no. 3 – 5 for each IAM user in your AWS account.  **From Command Line:**  1. Run `list-users` command to list all IAM users within your account: ``` aws iam list-users --query ""Users[*].UserName"" ``` The command output should return an array that contains all your IAM user names.  2. Run `list-access-keys` command using the IAM user name list to return the current status of each access key associated with the selected IAM user: ``` aws iam list-access-keys --user-name <user-name> ``` The command output should expose the metadata `(""Username"", ""AccessKeyId"", ""Status"", ""CreateDate"")` for each access key on that user account.  3. Check the `Status` property value for each key returned to determine each keys current state. If the `Status` property value for more than one IAM access key is set to `Active`, the user access configuration does not adhere to this recommendation, refer to the remediation below.  - Repeat steps no. 2 and 3 for each IAM user in your AWS account.";;https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html;FAIL;User <root_account> has 2 active access keys.;arn:aws:iam::851725370590:root;<root_account>;iam_user_two_active_access_key;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;1.13;Ensure there is only one active access key available for any single IAM user;1. Identity and Access Management;Level 1;Automated;Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK);Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API. One of the best ways to protect your account is to not allow users to have multiple access keys.;;**From Console:**  1. Sign in to the AWS Management Console and navigate to IAM dashboard at `https://console.aws.amazon.com/iam/`. 2. In the left navigation panel, choose `Users`. 3. Click on the IAM user name that you want to examine. 4. On the IAM user configuration page, select `Security Credentials` tab. 5. In `Access Keys` section, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working. 6. In the same `Access Keys` section, identify your non-operational access keys (other than the chosen one) and deactivate it by clicking the `Make Inactive` link. 7. If you receive the `Change Key Status` confirmation box, click `Deactivate` to switch off the selected key. 8. Repeat steps no. 3 – 7 for each IAM user in your AWS account.  **From Command Line:**  1. Using the IAM user and access key information provided in the `Audit CLI`, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working.  2. Run the `update-access-key` command below using the IAM user name and the non-operational access key IDs to deactivate the unnecessary key(s). Refer to the Audit section to identify the unnecessary access key ID for the selected IAM user  **Note** - the command does not return any output: ``` aws iam update-access-key --access-key-id <access-key-id> --status Inactive --user-name <user-name> ``` 3. To confirm that the selected access key pair has been successfully `deactivated` run the `list-access-keys` audit command again for that IAM User: ``` aws iam list-access-keys --user-name <user-name> ``` - The command output should expose the metadata for each access key associated with the IAM user. If the non-operational key pair(s) `Status` is set to `Inactive`, the key has been successfully deactivated and the IAM user access configuration adheres now to this recommendation.  4. Repeat steps no. 1 – 3 for each IAM user in your AWS account.;"**From Console:**  1. Sign in to the AWS Management Console and navigate to IAM dashboard at `https://console.aws.amazon.com/iam/`. 2. In the left navigation panel, choose `Users`. 3. Click on the IAM user name that you want to examine. 4. On the IAM user configuration page, select `Security Credentials` tab. 5. Under `Access Keys` section, in the Status column, check the current status for each access key associated with the IAM user. If the selected IAM user has more than one access key activated then the users access configuration does not adhere to security best practices and the risk of accidental exposures increases. - Repeat steps no. 3 – 5 for each IAM user in your AWS account.  **From Command Line:**  1. Run `list-users` command to list all IAM users within your account: ``` aws iam list-users --query ""Users[*].UserName"" ``` The command output should return an array that contains all your IAM user names.  2. Run `list-access-keys` command using the IAM user name list to return the current status of each access key associated with the selected IAM user: ``` aws iam list-access-keys --user-name <user-name> ``` The command output should expose the metadata `(""Username"", ""AccessKeyId"", ""Status"", ""CreateDate"")` for each access key on that user account.  3. Check the `Status` property value for each key returned to determine each keys current state. If the `Status` property value for more than one IAM access key is set to `Active`, the user access configuration does not adhere to this recommendation, refer to the remediation below.  - Repeat steps no. 2 and 3 for each IAM user in your AWS account.";;https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html;FAIL;User Manjeet has 2 active access keys.;arn:aws:iam::851725370590:user/Manjeet;Manjeet;iam_user_two_active_access_key;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-2;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-northeast-3;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-south-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ap-southeast-2;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;ca-central-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-central-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-north-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-2;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;eu-west-3;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;sa-east-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-2;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-1;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-west-2;2025-01-28 16:41:07.168323;4.16;Ensure AWS Security Hub is enabled;4. Monitoring;Level 2;Automated;Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues. When you enable Security Hub, it begins to consume, aggregate, organize, and prioritize findings from AWS services that you have enabled, such as Amazon GuardDuty, Amazon Inspector, and Amazon Macie. You can also enable integrations with AWS partner security products.;AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices - enabling you to quickly assess the security posture across your AWS accounts.;It is recommended AWS Security Hub be enabled in all regions. AWS Security Hub requires AWS Config to be enabled.;To grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.  Enabling Security Hub  **From Console:**  1. Use the credentials of the IAM identity to sign in to the Security Hub console. 2. When you open the Security Hub console for the first time, choose Enable AWS Security Hub. 3. On the welcome page, Security standards list the security standards that Security Hub supports. 4. Choose Enable Security Hub.  **From Command Line:**  1. Run the enable-security-hub command. To enable the default standards, include `--enable-default-standards`. ``` aws securityhub enable-security-hub --enable-default-standards ```  2. To enable the security hub without the default standards, include `--no-enable-default-standards`. ``` aws securityhub enable-security-hub --no-enable-default-standards ```;The process to evaluate AWS Security Hub configuration per region   **From Console:**  1. Sign in to the AWS Management Console and open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. 2. On the top right of the console, select the target Region. 3. If presented with the Security Hub > Summary page then Security Hub is set-up for the selected region. 4. If presented with Setup Security Hub or Get Started With Security Hub - follow the online instructions. 5. Repeat steps 2 to 4 for each region.;;https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-get-started.html:https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-enable.html#securityhub-enable-api:https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/enable-security-hub.html;FAIL;Security Hub is not enabled.;arn:aws:iam::851725370590:root;Security Hub;securityhub_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;851725370590;us-east-1;2025-01-28 16:41:07.168323;3.7;Ensure VPC flow logging is enabled in all VPCs;3. Logging;Level 2;Automated;"VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet ""Rejects"" for VPCs.";VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.;By default, CloudWatch Logs will store Logs indefinitely unless a specific retention period is defined for the log group. When choosing the number of days to retain, keep in mind the average days it takes an organization to realize they have been breached is 210 days (at the time of this writing). Since additional time is required to research a breach, a minimum 365 day retention policy allows time for detection and research. You may also wish to archive the logs to a cheaper storage service rather than simply deleting them. See the following AWS resource to manage CloudWatch Logs retention periods:  1. https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/SettingLogRetention.html;"Perform the following to determine if VPC Flow logs is enabled:  **From Console:**  1. Sign into the management console 2. Select `Services` then `VPC`  3. In the left navigation pane, select `Your VPCs`  4. Select a VPC 5. In the right pane, select the `Flow Logs` tab. 6. If no Flow Log exists, click `Create Flow Log`  7. For Filter, select `Reject` 8. Enter in a `Role` and `Destination Log Group`  9. Click `Create Log Flow`  10. Click on `CloudWatch Logs Group`   **Note:** Setting the filter to ""Reject"" will dramatically reduce the logging data accumulation for this recommendation and provide sufficient information for the purposes of breach detection, research and remediation. However, during periods of least privilege security group engineering, setting this the filter to ""All"" can be very helpful in discovering existing traffic flows required for proper operation of an already running environment.  **From Command Line:**  1. Create a policy document and name it as `role_policy_document.json` and paste the following content: ``` {  ""Version"": ""2012-10-17"",  ""Statement"": [  {  ""Sid"": ""test"",  ""Effect"": ""Allow"",  ""Principal"": {  ""Service"": ""ec2.amazonaws.com""  },  ""Action"": ""sts:AssumeRole""  }  ] } ``` 2. Create another policy document and name it as `iam_policy.json` and paste the following content: ``` {  ""Version"": ""2012-10-17"",  ""Statement"": [  {  ""Effect"": ""Allow"",  ""Action"":[  ""logs:CreateLogGroup"",  ""logs:CreateLogStream"",  ""logs:DescribeLogGroups"",  ""logs:DescribeLogStreams"",  ""logs:PutLogEvents"",  ""logs:GetLogEvents"",  ""logs:FilterLogEvents""  ],  ""Resource"": ""*""  }  ] } ``` 3. Run the below command to create an IAM role: ``` aws iam create-role --role-name <aws_support_iam_role> --assume-role-policy-document file://<file-path>role_policy_document.json  ``` 4. Run the below command to create an IAM policy: ``` aws iam create-policy --policy-name <ami-policy-name> --policy-document file://<file-path>iam-policy.json ``` 5. Run `attach-group-policy` command using the IAM policy ARN returned at the previous step to attach the policy to the IAM role (if the command succeeds, no output is returned): ``` aws iam attach-group-policy --policy-arn arn:aws:iam::<aws-account-id>:policy/<iam-policy-name> --group-name <group-name> ``` 6. Run `describe-vpcs` to get the VpcId available in the selected region: ``` aws ec2 describe-vpcs --region <region> ``` 7. The command output should return the VPC Id available in the selected region. 8. Run `create-flow-logs` to create a flow log for the vpc: ``` aws ec2 create-flow-logs --resource-type VPC --resource-ids <vpc-id> --traffic-type REJECT --log-group-name <log-group-name> --deliver-logs-permission-arn <iam-role-arn> ``` 9. Repeat step 8 for other vpcs available in the selected region. 10. Change the region by updating --region and repeat remediation procedure for other vpcs.";"Perform the following to determine if VPC Flow logs are enabled:  **From Console:**  1. Sign into the management console 2. Select `Services` then `VPC`  3. In the left navigation pane, select `Your VPCs`  4. Select a VPC 5. In the right pane, select the `Flow Logs` tab. 6. Ensure a Log Flow exists that has `Active` in the `Status` column.  **From Command Line:**  1. Run `describe-vpcs` command (OSX/Linux/UNIX) to list the VPC networks available in the current AWS region: ``` aws ec2 describe-vpcs --region <region> --query Vpcs[].VpcId ``` 2. The command output returns the `VpcId` available in the selected region. 3. Run `describe-flow-logs` command (OSX/Linux/UNIX) using the VPC ID to determine if the selected virtual network has the Flow Logs feature enabled: ``` aws ec2 describe-flow-logs --filter ""Name=resource-id,Values=<vpc-id>"" ``` 4. If there are no Flow Logs created for the selected VPC, the command output will return an `empty list []`. 5. Repeat step 3 for other VPCs available in the same region. 6. Change the region by updating `--region` and repeat steps 1 - 5 for all the VPCs.";;https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs.html;FAIL;VPC vpc-05fcc3a5669c86c9b Flow logs are disabled.;arn:aws:ec2:us-east-1:851725370590:vpc/vpc-05fcc3a5669c86c9b;vpc-05fcc3a5669c86c9b;vpc_flow_logs_enabled;False
aws;The CIS Amazon Web Services Foundations Benchmark provides prescriptive guidance for configuring security options for a subset of Amazon Web Services with an emphasis on foundational, testable, and architecture agnostic settings.;;;2025-01-28 16:41:07.168323;1.22;Ensure access to AWSCloudShellFullAccess is restricted;1. Identity and Access Management;Level 1;Manual;"AWS CloudShell is a convenient way of running CLI commands against AWS services; a managed IAM policy ('AWSCloudShellFullAccess') provides full access to CloudShell, which allows file upload and download capability between a user's local system and the CloudShell environment. Within the CloudShell environment a user has sudo permissions, and can access the internet. So it is feasible to install file transfer software (for example) and move data from CloudShell to external internet servers.";Access to this policy should be restricted as it presents a potential channel for data exfiltration by malicious cloud admins that are given full permissions to the service. AWS documentation describes how to create a more restrictive IAM policy which denies file transfer permissions.;;**From Console**  1. Open the IAM console at https://console.aws.amazon.com/iam/  2. In the left pane, select Policies 3. Search for and select AWSCloudShellFullAccess  4. On the Entities attached tab, for each item, check the box and select Detach;"**From Console** 1. Open the IAM console at https://console.aws.amazon.com/iam/  2. In the left pane, select Policies  3. Search for and select AWSCloudShellFullAccess  4. On the Entities attached tab, ensure that there are no entities using this policy   **From Command Line**  1. List IAM policies, filter for the 'AWSCloudShellFullAccess' managed policy, and note the """"Arn"""" element value:  ```  aws iam list-policies --query """"Policies[?PolicyName == 'AWSCloudShellFullAccess']""""  ```   2. Check if the 'AWSCloudShellFullAccess' policy is attached to any role:   ```  aws iam list-entities-for-policy --policy-arn arn:aws:iam::aws:policy/AWSCloudShellFullAccess  ```  3. In Output, Ensure PolicyRoles returns empty. 'Example: Example: PolicyRoles: [ ]'  If it does not return empty refer to the remediation below.  Note: Keep in mind that other policies may grant access.";;https://docs.aws.amazon.com/cloudshell/latest/userguide/sec-auth-with-identities.html;MANUAL;Manual check;manual_check;Manual check;manual;False
